name: Python QA

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.9', '3.8']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest flit
        python -m pip install -r requirements.txt
        python -m pip install -r docs/requirements.txt
        
    - name: Build (Flit)
      run: |
        python -m flit build
        rm -r dist/

    - name: Build & Install
      run: |
        python ./setup.py build
        python ./setup.py install --root=/tmp

    #- name: Test with pytest
    #  run: |
    #    pytest | true


  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel flake8 pylint
        python -m pip install -r requirements.txt

    - name: Lint (flake8)
      run: |
        flake8 ./edlio ./tests --show-source --statistics

    - name: Lint (pylint)
      run: |
        python -m pylint -f colorized ./edlio ./tests
        python -m pylint -f colorized setup.py


  mypy:
    name: MyPy Typecheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel mypy types-toml
        python -m pip install -r requirements.txt

    - name: Check with MyPy
      run: |
        mypy --pretty edlio
