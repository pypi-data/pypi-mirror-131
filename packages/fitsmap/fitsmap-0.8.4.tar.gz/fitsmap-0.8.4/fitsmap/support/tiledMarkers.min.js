"use strict";L.GridLayer.TiledMarkers=L.GridLayer.extend({options:{tileURL:"",color:"#4C72B0",rowsPerCol:1/0},initialize:function(t){L.setOptions(this,t),this.tilePointCache={}},convertJSONtoHTMLTable:function(t){const e=["fm_y","fm_x","fm_cat"],o=Object.keys(t).length-e.length,n=this.options.rowsPerColumn;let a=Math.floor(o/(Number.isFinite(n)?n:o));Number.isFinite(n)&&o%n>0&&(a+=1);let s="<span>Catalog Information</span><table class='catalog-table'>";const i=Object.keys(t).filter((t=>!e.includes(t)));let r=0;return i.forEach((e=>{0==r&&(s+="<tr>"),s+=`<td><b>${e}:<b></td><td>${t[e]}</td>`,r+=1,r==a&&(r=0,s+="</tr>")})),s+="</table>",s},renderPopupContents:function(t,e){const o=e.getPopup();return fetch(e.options.assetPath).then((t=>{if(!t.ok)throw console.log(t),new Error("Failed to fetch JSON",t);return t.json()})).then((e=>{o.setContent(t.convertJSONtoHTMLTable(e)).update()})).catch((t=>{console.log("ERROR in Popup Rendering",t)})),console.log(e),document.querySelector(".leaflet-popup-pane").addEventListener("load",(function(t){const e=t.target.tagName,o=map._popup;"IMG"===e&&o&&!o._updated&&(o._updated=!0,o.update())}),!0),"Loading..."},createClusterIcon:function(t){const e=L.latLng(t.global_y,t.global_x);if(!t.cluster){const o=L.popup({maxWidth:"auto"}).setLatLng(e).setContent((t=>this.renderPopupContents(this,t)));return-1==t.a?L.circleMarker(e,{color:this.options.color,assetPath:`catalog_assets/${t.cat_path}/${t.catalog_id}.json`}).bindPopup(o):L.ellipse(e,[t.a,t.b],t.theta*(180/Math.PI)*-1,{color:this.options.color,assetPath:`catalog_assets/${t.cat_path}/${t.catalog_id}.json`}).bindPopup(o)}const o=t.point_count,n=o<100?"small":o<1e3?"medium":o<1e6?"large":"x-large",a=L.divIcon({html:`<div><span>${t.point_count_abbreviated}</span></div>`,className:`marker-cluster marker-cluster-${n}`,iconSize:L.point(40,40)});return L.marker(e,{icon:a}).bindPopup(`${t.global_y}, ${t.global_x}`)},parseTileResponse:function(t,e){200==e.status&&e.arrayBuffer().then((e=>{this.tilePointCache[t]||(this.tilePointCache[t]=[]);const o=new Pbf(e),n=new VectorTile(o).layers.Points;for(let e=0;e<n.length;e++){let o=n.feature(e);this.tilePointCache[t].push(this.createClusterIcon(o.properties).addTo(map))}})).catch((t=>console.log(t)))},createTile:function(t,e){const o=2**t.z-t.y-1,n=(t.z,t.x,this.options.tileURL.replace("{z}",`${t.z}`).replace("{y}",`${o}`).replace("{x}",`${t.x}`)),a=`${t.z},${t.y},${t.x}`;return fetch(n).then((t=>this.parseTileResponse(a,t))).catch((t=>{console.log(t)})),L.DomUtil.create("canvas","leaflet-tile")},clearItems:function(t){const e=`${t.coords.z},${t.coords.y},${t.coords.x}`;if(this.tilePointCache[e])for(;this.tilePointCache[e].length;){let t=this.tilePointCache[e].pop().remove();t=null}}}),L.gridLayer.tiledMarkers=function(t){const e=new L.GridLayer.TiledMarkers(t);return e.on("tileunload",e.clearItems),e};