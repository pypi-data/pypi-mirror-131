- name: apt update (may take some time) + install gpg 
  apt:
    update_cache: yes
    pkg:
      - gpg

# add mopidy's repository for its newest version and extensions
# https://docs.mopidy.com/en/latest/installation/debian/
- name: Add mopidy gpg key
  apt_key:
    url: https://apt.mopidy.com/mopidy.gpg
- name: Add mopidy repository
  apt_repository:
    # from https://apt.mopidy.com/buster.list
    repo: deb https://apt.mopidy.com/ buster main contrib non-free

- name: Install apt dependencies (may take some time)
  apt:
    pkg:
    # python package management
    - python3-pip
    # ping
    - inetutils-ping
    # webserver
    - nginx
    # player
    - mopidy
    - pulseaudio
    # m4a playback
    - gstreamer1.0-plugins-bad
    # bluetooth playback
    - pulseaudio-module-bluetooth
    # database
    - postgresql
    - libpq-dev # required for psycopg2
    # channel layer
    - redis-server
    # remote connection
    - autossh
    # https://stackoverflow.com/questions/25751085/postgresql-failing-peer-authentication-with-ansible
    # needed for postgresql_db
    - acl

# update pip so cryptography wheels can be installed
- name: pip self-update
  pip:
    name: pip
    state: latest

- name: Install python dependencies (may take some time)
  pip:
    requirements: "{{ config.install_directory }}/requirements/prod.txt"

# Block name copied into every task
# https://github.com/ansible/ansible/issues/33581
- name: Install Youtube dependencies
  when: config.youtube is not defined or config.youtube
  block:
    - name: "Install Youtube dependencies: Install apt dependencies"
      apt:
        pkg:
        #audio conversion
        - ffmpeg
    - name: "Install Youtube dependencies: Install python dependencies"
      pip:
        requirements: "{{ config.install_directory }}/requirements/youtube.txt"

- name: Install Spotify dependencies
  when: config.spotify is defined and config.spotify
  block:
    - name: "Install Spotify dependencies: Install apt dependencies"
      apt:
        pkg:
        - mopidy-spotify
        - libspotify-dev
    - name: "Install Spotify dependencies: Install python dependencies"
      pip:
        requirements: "{{ config.install_directory }}/requirements/spotify.txt"

- name: Install Soundcloud dependencies
  when: config.soundcloud is defined and config.soundcloud
  block:
    - name: "Install Soundcloud dependencies: Install apt dependencies"
      apt:
        pkg:
        - mopidy-soundcloud
    - name: "Install Soundcloud dependencies: Install python dependencies"
      pip:
        requirements: "{{ config.install_directory }}/requirements/soundcloud.txt"


- name: Install hotspot dependencies
  when: config.hotspot
  apt:
    pkg:
    - dnsmasq
    - hostapd
    - iptables
    - rfkill

- name: Install screen visualization dependencies
  when: config.screen_visualization
  block:
    - name: "Install screen visualization dependencies: Install apt dependencies"
      apt:
        pkg:
        # these packages are installed via apt because pip ships too new versions
        - python3-numpy
        - python3-scipy
        - python3-pil
        - mesa-utils # graphics drivers
        - mesa-utils-extra # contains libgles2
        - xorg # X is needed for displaying
    - name: "Install screen visualization dependencies: Install python dependencies"
      pip:
        name: pi3d

- name: Install buzzer dependencies
  when: config.buzzer is defined and config.buzzer
  pip:
    requirements: "{{ config.install_directory }}/requirements/buzzer.txt"

- name: Install led visualization dependencies
  when: config.led_visualization
  pip:
    requirements: "{{ config.install_directory }}/requirements/ledvis.txt"

- name: Check if cava executable is present
  shell: type cava
  register: type_cava
  changed_when: no
  failed_when: no

- name: Install cava
  when: (config.led_visualization or config.screen_visualization) and type_cava.rc != 0
  block:
    # from https://github.com/karlstav/cava
    - name: "Install cava: Install apt dependencies"
      apt:
        pkg:
          - git
          - libfftw3-dev
          - libasound2-dev
          - libncursesw5-dev
          - libpulse-dev
          - libtool
          - m4
          - automake
          - libtool
    - name: "Install cava: Git checkout"
      git:
        repo: https://github.com/karlstav/cava
        dest: /opt/cava
    - name: "Install cava: Build"
      command: chdir=/opt/cava/ {{ item }}
      with_items:
      - ./autogen.sh
      - ./configure
      - make
      - make install

- name: Check if rganalysis executable is present
  shell: type rganalysis
  register: type_rganalysis
  changed_when: no
  failed_when: no

- name: Install rganalysis
  when: config.audio_normalization and type_rganalysis.rc != 0
  block:
    - name: "Install rganalysis: Install apt dependencies"
      apt:
        pkg:
          - audiotools
          - libfaad2  # prerequisite for faad install
    # install faad to analyze aac files
    # version 2.7 is required,
    # because newer version don't work with multiple tracks
    # https://github.com/knik0/faad2/issues/71
    # an old .deb from ubuntu 14 is used to avoid manual compilation
    - name: "Install rganalysis: Uninstall new faad"
      apt:
        pkg:
          - faad
        state: absent
    - name: "Install rganalysis: Download faad2"
      when: ansible_facts['architecture'] == 'x86_64'
      get_url:
        url: http://launchpadlibrarian.net/335256796/faad_2.7-8+deb7u1build0.14.04.1_amd64.deb
        dest: /tmp/faad2.deb
    - name: "Install rganalysis: Download faad2"
      when: ansible_facts['architecture'] == 'armv7l'
      get_url:
        url: http://launchpadlibrarian.net/335256808/faad_2.7-8+deb7u1build0.14.04.1_armhf.deb
        dest: /tmp/faad2.deb
    - name: "Install rganalysis: Download faad2"
      when: ansible_facts['architecture'] == 'armv8l'
      get_url:
        url: http://launchpadlibrarian.net/335256691/faad_2.7-8+deb7u1build0.14.04.1_arm64.deb
        dest: /tmp/faad2.deb
    - name: "Install rganalysis: Install faad2"
      apt:
        deb: /tmp/faad2.deb
    - name: "Install rganalysis: Install rganalysis"
      pip:
        name: https://github.com/DarwinAwardWinner/rganalysis/archive/refs/tags/v3.6.zip

- name: Install system scripts
  copy:
    src: "{{ config.install_directory }}/scripts/system/"
    remote_src: yes
    dest: /usr/local/sbin/raveberry/
    mode: +x
