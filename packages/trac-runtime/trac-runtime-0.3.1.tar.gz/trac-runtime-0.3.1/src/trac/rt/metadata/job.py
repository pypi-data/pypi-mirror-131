# Code generated by TRAC

from __future__ import annotations
import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa

from .type import *  # noqa
from .object_id import *  # noqa


class JobType(_enum.Enum):

    JOB_TYPE_NOT_SET = 0, 

    RUN_MODEL = 1, 

    RUN_FLOW = 2, 

    IMPORT_MODEL = 3, 

    IMPORT_DATA = 4, 


@_dc.dataclass
class JobDefinition:

    jobType: JobType = JobType.JOB_TYPE_NOT_SET

    target: TagSelector = None

    parameters: _tp.Dict[str, trac.metadata.Value] = _dc.field(default_factory=list)

    inputs: _tp.Dict[str, trac.metadata.TagSelector] = _dc.field(default_factory=list)

    outputs: _tp.Dict[str, trac.metadata.TagSelector] = _dc.field(default_factory=list)

    models: _tp.Dict[str, trac.metadata.TagSelector] = _dc.field(default_factory=list)
