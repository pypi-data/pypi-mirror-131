# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v45</h1>       <p>Introduced in Cloudera Manager 7.5.4</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.5.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import cm_client
from cm_client.rest import ApiException
from cm_client.apis.control_planes_resource_api import ControlPlanesResourceApi


class TestControlPlanesResourceApi(unittest.TestCase):
    """ ControlPlanesResourceApi unit test stubs """

    def setUp(self):
        self.api = cm_client.apis.control_planes_resource_api.ControlPlanesResourceApi()

    def tearDown(self):
        pass

    def test_generate_copy_docker(self):
        """
        Test case for generate_copy_docker

        Launches the Generate Copy Docker Script Command.
        """
        pass

    def test_generate_external_vault_setup(self):
        """
        Test case for generate_external_vault_setup

        Launches the Generate Vault Setup Command command.
        """
        pass

    def test_get_control_planes(self):
        """
        Test case for get_control_planes

        Current Control Planes.
        """
        pass

    def test_get_experience_cluster(self):
        """
        Test case for get_experience_cluster

        The Experience cluster this control plane is associated with, if any.
        """
        pass

    def test_get_log_content(self):
        """
        Test case for get_log_content

        Fetches the log content for the specific command.
        """
        pass

    def test_get_manifest_json(self):
        """
        Test case for get_manifest_json

        Fetches the manifest.
        """
        pass

    def test_install_control_plane(self):
        """
        Test case for install_control_plane

        Launches the install control plane command.
        """
        pass

    def test_install_embedded_control_plane(self):
        """
        Test case for install_embedded_control_plane

        Brings up a control plane on embedded kubernetes.
        """
        pass

    def test_read_control_plane_by_uuid(self):
        """
        Test case for read_control_plane_by_uuid

        The control plane with the given id.
        """
        pass

    def test_uninstall_control_plane(self):
        """
        Test case for uninstall_control_plane

        Launches Uninstall Command on the control plane with the given uuid.
        """
        pass

    def test_update_values_yaml(self):
        """
        Test case for update_values_yaml

        Launches update the values.
        """
        pass

    def test_upgrade_control_plane(self):
        """
        Test case for upgrade_control_plane

        Launches the Upgrade Command on the control plane with the given uuid.
        """
        pass

    def test_upgrade_embedded_control_plane(self):
        """
        Test case for upgrade_embedded_control_plane

        Upgrade an experience cluster, including upgrading the control plane running on embedded kubernetes.
        """
        pass


if __name__ == '__main__':
    unittest.main()
