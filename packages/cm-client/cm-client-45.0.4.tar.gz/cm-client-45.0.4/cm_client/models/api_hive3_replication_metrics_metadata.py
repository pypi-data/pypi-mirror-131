# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v45</h1>       <p>Introduced in Cloudera Manager 7.5.4</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.5.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ApiHive3ReplicationMetricsMetadata(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'db_name': 'str',
        'replication_type': 'ReplicationType',
        'staging_dir': 'str',
        'last_repl_id': 'int'
    }

    attribute_map = {
        'db_name': 'dbName',
        'replication_type': 'replicationType',
        'staging_dir': 'stagingDir',
        'last_repl_id': 'lastReplId'
    }

    def __init__(self, db_name=None, replication_type=None, staging_dir=None, last_repl_id=None):
        """
        ApiHive3ReplicationMetricsMetadata - a model defined in Swagger
        """

        self._db_name = None
        self._replication_type = None
        self._staging_dir = None
        self._last_repl_id = None

        if db_name is not None:
          self.db_name = db_name
        if replication_type is not None:
          self.replication_type = replication_type
        if staging_dir is not None:
          self.staging_dir = staging_dir
        if last_repl_id is not None:
          self.last_repl_id = last_repl_id

    @property
    def db_name(self):
        """
        Gets the db_name of this ApiHive3ReplicationMetricsMetadata.
        

        :return: The db_name of this ApiHive3ReplicationMetricsMetadata.
        :rtype: str
        """
        return self._db_name

    @db_name.setter
    def db_name(self, db_name):
        """
        Sets the db_name of this ApiHive3ReplicationMetricsMetadata.
        

        :param db_name: The db_name of this ApiHive3ReplicationMetricsMetadata.
        :type: str
        """

        self._db_name = db_name

    @property
    def replication_type(self):
        """
        Gets the replication_type of this ApiHive3ReplicationMetricsMetadata.
        

        :return: The replication_type of this ApiHive3ReplicationMetricsMetadata.
        :rtype: ReplicationType
        """
        return self._replication_type

    @replication_type.setter
    def replication_type(self, replication_type):
        """
        Sets the replication_type of this ApiHive3ReplicationMetricsMetadata.
        

        :param replication_type: The replication_type of this ApiHive3ReplicationMetricsMetadata.
        :type: ReplicationType
        """

        self._replication_type = replication_type

    @property
    def staging_dir(self):
        """
        Gets the staging_dir of this ApiHive3ReplicationMetricsMetadata.
        

        :return: The staging_dir of this ApiHive3ReplicationMetricsMetadata.
        :rtype: str
        """
        return self._staging_dir

    @staging_dir.setter
    def staging_dir(self, staging_dir):
        """
        Sets the staging_dir of this ApiHive3ReplicationMetricsMetadata.
        

        :param staging_dir: The staging_dir of this ApiHive3ReplicationMetricsMetadata.
        :type: str
        """

        self._staging_dir = staging_dir

    @property
    def last_repl_id(self):
        """
        Gets the last_repl_id of this ApiHive3ReplicationMetricsMetadata.
        

        :return: The last_repl_id of this ApiHive3ReplicationMetricsMetadata.
        :rtype: int
        """
        return self._last_repl_id

    @last_repl_id.setter
    def last_repl_id(self, last_repl_id):
        """
        Sets the last_repl_id of this ApiHive3ReplicationMetricsMetadata.
        

        :param last_repl_id: The last_repl_id of this ApiHive3ReplicationMetricsMetadata.
        :type: int
        """

        self._last_repl_id = last_repl_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ApiHive3ReplicationMetricsMetadata):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
