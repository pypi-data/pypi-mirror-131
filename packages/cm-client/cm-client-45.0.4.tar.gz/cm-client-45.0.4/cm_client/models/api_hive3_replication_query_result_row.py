# coding: utf-8

"""
    Cloudera Manager API

    <h1>Cloudera Manager API v45</h1>       <p>Introduced in Cloudera Manager 7.5.4</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>

    OpenAPI spec version: 7.5.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ApiHive3ReplicationQueryResultRow(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'scheduled_queries_result_row': 'ApiHive3ReplicationScheduledQueriesResultRow',
        'scheduled_executions_result_row': 'ApiHive3ReplicationScheduledExecutionsResultRow',
        'replication_metrics_result_row': 'ApiHive3ReplicationMetricsResultRow'
    }

    attribute_map = {
        'scheduled_queries_result_row': 'scheduledQueriesResultRow',
        'scheduled_executions_result_row': 'scheduledExecutionsResultRow',
        'replication_metrics_result_row': 'replicationMetricsResultRow'
    }

    def __init__(self, scheduled_queries_result_row=None, scheduled_executions_result_row=None, replication_metrics_result_row=None):
        """
        ApiHive3ReplicationQueryResultRow - a model defined in Swagger
        """

        self._scheduled_queries_result_row = None
        self._scheduled_executions_result_row = None
        self._replication_metrics_result_row = None

        if scheduled_queries_result_row is not None:
          self.scheduled_queries_result_row = scheduled_queries_result_row
        if scheduled_executions_result_row is not None:
          self.scheduled_executions_result_row = scheduled_executions_result_row
        if replication_metrics_result_row is not None:
          self.replication_metrics_result_row = replication_metrics_result_row

    @property
    def scheduled_queries_result_row(self):
        """
        Gets the scheduled_queries_result_row of this ApiHive3ReplicationQueryResultRow.
        

        :return: The scheduled_queries_result_row of this ApiHive3ReplicationQueryResultRow.
        :rtype: ApiHive3ReplicationScheduledQueriesResultRow
        """
        return self._scheduled_queries_result_row

    @scheduled_queries_result_row.setter
    def scheduled_queries_result_row(self, scheduled_queries_result_row):
        """
        Sets the scheduled_queries_result_row of this ApiHive3ReplicationQueryResultRow.
        

        :param scheduled_queries_result_row: The scheduled_queries_result_row of this ApiHive3ReplicationQueryResultRow.
        :type: ApiHive3ReplicationScheduledQueriesResultRow
        """

        self._scheduled_queries_result_row = scheduled_queries_result_row

    @property
    def scheduled_executions_result_row(self):
        """
        Gets the scheduled_executions_result_row of this ApiHive3ReplicationQueryResultRow.
        

        :return: The scheduled_executions_result_row of this ApiHive3ReplicationQueryResultRow.
        :rtype: ApiHive3ReplicationScheduledExecutionsResultRow
        """
        return self._scheduled_executions_result_row

    @scheduled_executions_result_row.setter
    def scheduled_executions_result_row(self, scheduled_executions_result_row):
        """
        Sets the scheduled_executions_result_row of this ApiHive3ReplicationQueryResultRow.
        

        :param scheduled_executions_result_row: The scheduled_executions_result_row of this ApiHive3ReplicationQueryResultRow.
        :type: ApiHive3ReplicationScheduledExecutionsResultRow
        """

        self._scheduled_executions_result_row = scheduled_executions_result_row

    @property
    def replication_metrics_result_row(self):
        """
        Gets the replication_metrics_result_row of this ApiHive3ReplicationQueryResultRow.
        

        :return: The replication_metrics_result_row of this ApiHive3ReplicationQueryResultRow.
        :rtype: ApiHive3ReplicationMetricsResultRow
        """
        return self._replication_metrics_result_row

    @replication_metrics_result_row.setter
    def replication_metrics_result_row(self, replication_metrics_result_row):
        """
        Sets the replication_metrics_result_row of this ApiHive3ReplicationQueryResultRow.
        

        :param replication_metrics_result_row: The replication_metrics_result_row of this ApiHive3ReplicationQueryResultRow.
        :type: ApiHive3ReplicationMetricsResultRow
        """

        self._replication_metrics_result_row = replication_metrics_result_row

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ApiHive3ReplicationQueryResultRow):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
