[MAIN]
APP_ID = nvdsw
CUDA_VER_FILE = /usr/local/cuda/version.txt
CUDA_VER_JSON = /usr/local/cuda/version.json
# ICON_FILE = images/nv_icon.ico

LOG_DIR = logs
LOG_ROLL_DAYS = 1
LOG_BACKUPS = 5
# LOG_FORMAT = ('%(asctime)s - %(threadName)s - %(name)s - %(levelname)s - %(message)s')
MENUS_YAML = config/menus.yaml
USERSETTINGS_YAML = config/usersettings.yaml
AWS_DOCKER_IMAGE = amazon/aws-cli
AWS_CLI_CONTAINER_NAME = nvdsw_aws
AWS_DOCKER_SOURCE_MOUNT = data
AWS_DOCKER_TARGET_MOUNT = /data
# if true, containers will be run with the --rm flag 
# which means, a stopped container is auto-removed.
DOCKER_REMOVE_FLAG = True
DOCKER_START_TIMEOUT = 20

# the initial dimensions of the launcher window
LAUNCHER_DEFAULT_WIDTH = 1460
LAUNCHER_DEFAULT_HEIGHT = 400

# how often to check for image existence
IMG_CHECK_INTERVAL = 60

# label our containers with this label 
DOCKER_GENERAL_LABEL = nvdsw

# where are the Dockerfiles for images located?
DOCKERFILE_DIR = docker
# timeout on container stop
DOCKER_STOP_TIMEOUT = 2
# only if the new launcher is not enabled
REMOVE_CONTAINERS_ON_STARTUP = True
NGC_CLI_URL = https://ngc.nvidia.com/downloads/ngccli_cat_linux.zip

MIN_DRIVER_VERSION = 465.0.0
LATEST_DSS_VERSION = 2.9.0



# otherwise the installer will refuse to run
MIN_GPU_MEM = 1000000000

MIN_PYTHON_VER = 3.6.9
DISPLAY_CONTAINER_INFO = True
LICENSE_ACCEPTED_FILE=license_accepted.txt
SETUP_SUCCEEDED_FILE=setup_succeeded.txt
UUID_FILE=uuid.txt

# how often do we sleep in [double] loops (sec)
# to see if out sleep intervals were updated by the user and it's time to wake up
DOUBLE_LOOP_SLEEP_INTERVAL = 10



[links]
NGC = https://ngc.nvidia.com
DLI = https://www.nvidia.com/en-us/training
# Forums = https://forums.developer.nvidia.com/c/ai-data-science/86
Forums = https://forums.developer.nvidia.com/c/ai-data-science/data-science-workbench/499
NV On Demand = https://www.nvidia.com/en-us/on-demand
# DSS Examples = https://github.com/NVIDIA/data-science-stack/tree/master/examples

[setup]
PACKAGES = gir1.2-appindicator3-0.1 curl unzip spyder3 snap curl git

[icons]
ICON_FILE = images/nvidia.png
UPDATE_ICON_FILE = images/nvidia-xclam.png
SETTINGS = images/wrench.svg
ABOUT = images/status.svg
CONTAINER = images/container.svg
NVAIE = images/nvaie.svg
LOCALRT = images/localrt.svg
LAUNCHER = images/launcher.svg
ACCOUNT = images/account.svg
DATA = images/data.svg
RUNNING = images/running.svg
SYNC = images/sync.svg
RESOURCE_DELETE = images/resource-delete.svg
START = images/start.svg
STOP = images/stop.svg
PAUSE = images/pause.svg
LOG = images/window-pulse-1.svg
DOWNLOAD = images/download.svg
TERMINAL = images/terminal.svg