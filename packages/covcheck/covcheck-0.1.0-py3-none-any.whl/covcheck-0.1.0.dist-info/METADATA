Metadata-Version: 2.1
Name: covcheck
Version: 0.1.0
Summary: Code coverage validation
Home-page: https://github.com/HumeAI/covcheck
License: Proprietary
Keywords: code,coverage,validation,check,test
Author: Hume AI Dev
Author-email: dev@hume.ai
Requires-Python: >=3.7,<3.10
Classifier: Development Status :: 4 - Beta
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: flake8 (>=4.0.1,<5.0.0)
Requires-Dist: mypy (>=0.920,<0.921)
Requires-Dist: pylint (>=2.12.2,<3.0.0)
Requires-Dist: pyproject-flake8 (>=0.0.1-alpha.2,<0.0.2)
Requires-Dist: pytest (>=6.2.5,<7.0.0)
Requires-Dist: pytest-cov (>=3.0.0,<4.0.0)
Requires-Dist: pytest-forked (>=1.4.0,<2.0.0)
Requires-Dist: pytest-xdist (>=2.5.0,<3.0.0)
Requires-Dist: types-setuptools (>=57.4.4,<58.0.0)
Requires-Dist: yapf (>=0.31.0,<0.32.0)
Project-URL: Repository, https://github.com/HumeAI/covcheck
Description-Content-Type: text/markdown

# covcheck

Command-line tool for code coverage validation.

`covcheck` is intented to be used in conjunction with [coverage.py](https://coverage.readthedocs.io/), which already has support for `pytest`, `unittest`, and `nosetest`. All you have to do is point `covcheck` to the `coverage.xml` file produced when running your tests.

## Installation

```bash
$ pip install coverage
$ pip install covcheck
```

## Usage

### 1. Produce a `coverage.xml` file while running your tests:

```bash
# pytest
$ coverage run --branch -m pytest ...
$ coverage xml

# unittest
$ coverage run --branch -m unittest ...
$ coverage xml

# nosetest
$ coverage run --branch -m nose ...
$ coverage xml
```

### 2. Validate that line and branch coverage meet the provided thresholds:

```bash
$ covcheck coverage.xml --line 96 --branch --84
```

