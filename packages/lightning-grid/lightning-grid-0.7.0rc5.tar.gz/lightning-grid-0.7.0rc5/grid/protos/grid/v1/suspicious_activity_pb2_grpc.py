# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grid.protos.grid.v1 import suspicious_activity_pb2 as grid_dot_v1_dot_suspicious__activity__pb2


class SuspiciousActivityServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ReportSuspiciousActivity = channel.unary_unary(
        '/grid.v1.SuspiciousActivityService/ReportSuspiciousActivity',
        request_serializer=grid_dot_v1_dot_suspicious__activity__pb2.ReportSuspiciousActivityRequest.SerializeToString,
        response_deserializer=grid_dot_v1_dot_suspicious__activity__pb2.ReportSuspiciousActivityResponse.FromString,
        )


class SuspiciousActivityServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ReportSuspiciousActivity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SuspiciousActivityServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ReportSuspiciousActivity': grpc.unary_unary_rpc_method_handler(
          servicer.ReportSuspiciousActivity,
          request_deserializer=grid_dot_v1_dot_suspicious__activity__pb2.ReportSuspiciousActivityRequest.FromString,
          response_serializer=grid_dot_v1_dot_suspicious__activity__pb2.ReportSuspiciousActivityResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grid.v1.SuspiciousActivityService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
