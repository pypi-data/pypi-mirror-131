# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grid/v1/integrations.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='grid/v1/integrations.proto',
  package='grid.v1',
  syntax='proto3',
  serialized_options=b'Z0github.com/gridai/grid/grid-backend/apis/grid/v1',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1agrid/v1/integrations.proto\x12\x07grid.v1\"\x86\x01\n\x05Token\x12\x14\n\x05token\x18\x01 \x01(\tR\x05token\x12\x32\n\x08provider\x18\x02 \x01(\x0e\x32\x16.grid.v1.TokenProviderR\x08provider\x12\x14\n\x05scope\x18\x03 \x01(\tR\x05scope\x12\x1d\n\nscope_type\x18\x04 \x01(\tR\tscopeType\"0\n\x15GetGitHubTokenRequest\x12\x17\n\x07user_id\x18\x01 \x01(\tR\x06userId\">\n\x16GetGitHubTokenResponse\x12$\n\x05token\x18\x01 \x01(\x0b\x32\x0e.grid.v1.TokenR\x05token\"V\n\x15SetGitHubTokenRequest\x12\x17\n\x07user_id\x18\x01 \x01(\tR\x06userId\x12$\n\x05token\x18\x02 \x01(\x0b\x32\x0e.grid.v1.TokenR\x05token\"\x18\n\x16SetGitHubTokenResponse*J\n\rTokenProvider\x12\x1e\n\x1aTOKEN_PROVIDER_UNSPECIFIED\x10\x00\x12\x19\n\x15TOKEN_PROVIDER_GITHUB\x10\x01\x32\xba\x01\n\x12IntegrationService\x12Q\n\x0eGetGitHubToken\x12\x1e.grid.v1.GetGitHubTokenRequest\x1a\x1f.grid.v1.GetGitHubTokenResponse\x12Q\n\x0eSetGitHubToken\x12\x1e.grid.v1.SetGitHubTokenRequest\x1a\x1f.grid.v1.SetGitHubTokenResponseB2Z0github.com/gridai/grid/grid-backend/apis/grid/v1b\x06proto3'
)

_TOKENPROVIDER = _descriptor.EnumDescriptor(
  name='TokenProvider',
  full_name='grid.v1.TokenProvider',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TOKEN_PROVIDER_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOKEN_PROVIDER_GITHUB', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=404,
  serialized_end=478,
)
_sym_db.RegisterEnumDescriptor(_TOKENPROVIDER)

TokenProvider = enum_type_wrapper.EnumTypeWrapper(_TOKENPROVIDER)
TOKEN_PROVIDER_UNSPECIFIED = 0
TOKEN_PROVIDER_GITHUB = 1



_TOKEN = _descriptor.Descriptor(
  name='Token',
  full_name='grid.v1.Token',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='grid.v1.Token.token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='token', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='provider', full_name='grid.v1.Token.provider', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='provider', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='scope', full_name='grid.v1.Token.scope', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='scope', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='scope_type', full_name='grid.v1.Token.scope_type', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='scopeType', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=174,
)


_GETGITHUBTOKENREQUEST = _descriptor.Descriptor(
  name='GetGitHubTokenRequest',
  full_name='grid.v1.GetGitHubTokenRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='grid.v1.GetGitHubTokenRequest.user_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='userId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=224,
)


_GETGITHUBTOKENRESPONSE = _descriptor.Descriptor(
  name='GetGitHubTokenResponse',
  full_name='grid.v1.GetGitHubTokenResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='grid.v1.GetGitHubTokenResponse.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='token', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=226,
  serialized_end=288,
)


_SETGITHUBTOKENREQUEST = _descriptor.Descriptor(
  name='SetGitHubTokenRequest',
  full_name='grid.v1.SetGitHubTokenRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='grid.v1.SetGitHubTokenRequest.user_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='userId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='token', full_name='grid.v1.SetGitHubTokenRequest.token', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='token', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=290,
  serialized_end=376,
)


_SETGITHUBTOKENRESPONSE = _descriptor.Descriptor(
  name='SetGitHubTokenResponse',
  full_name='grid.v1.SetGitHubTokenResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=378,
  serialized_end=402,
)

_TOKEN.fields_by_name['provider'].enum_type = _TOKENPROVIDER
_GETGITHUBTOKENRESPONSE.fields_by_name['token'].message_type = _TOKEN
_SETGITHUBTOKENREQUEST.fields_by_name['token'].message_type = _TOKEN
DESCRIPTOR.message_types_by_name['Token'] = _TOKEN
DESCRIPTOR.message_types_by_name['GetGitHubTokenRequest'] = _GETGITHUBTOKENREQUEST
DESCRIPTOR.message_types_by_name['GetGitHubTokenResponse'] = _GETGITHUBTOKENRESPONSE
DESCRIPTOR.message_types_by_name['SetGitHubTokenRequest'] = _SETGITHUBTOKENREQUEST
DESCRIPTOR.message_types_by_name['SetGitHubTokenResponse'] = _SETGITHUBTOKENRESPONSE
DESCRIPTOR.enum_types_by_name['TokenProvider'] = _TOKENPROVIDER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Token = _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
  'DESCRIPTOR' : _TOKEN,
  '__module__' : 'grid.v1.integrations_pb2'
  # @@protoc_insertion_point(class_scope:grid.v1.Token)
  })
_sym_db.RegisterMessage(Token)

GetGitHubTokenRequest = _reflection.GeneratedProtocolMessageType('GetGitHubTokenRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETGITHUBTOKENREQUEST,
  '__module__' : 'grid.v1.integrations_pb2'
  # @@protoc_insertion_point(class_scope:grid.v1.GetGitHubTokenRequest)
  })
_sym_db.RegisterMessage(GetGitHubTokenRequest)

GetGitHubTokenResponse = _reflection.GeneratedProtocolMessageType('GetGitHubTokenResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETGITHUBTOKENRESPONSE,
  '__module__' : 'grid.v1.integrations_pb2'
  # @@protoc_insertion_point(class_scope:grid.v1.GetGitHubTokenResponse)
  })
_sym_db.RegisterMessage(GetGitHubTokenResponse)

SetGitHubTokenRequest = _reflection.GeneratedProtocolMessageType('SetGitHubTokenRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETGITHUBTOKENREQUEST,
  '__module__' : 'grid.v1.integrations_pb2'
  # @@protoc_insertion_point(class_scope:grid.v1.SetGitHubTokenRequest)
  })
_sym_db.RegisterMessage(SetGitHubTokenRequest)

SetGitHubTokenResponse = _reflection.GeneratedProtocolMessageType('SetGitHubTokenResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETGITHUBTOKENRESPONSE,
  '__module__' : 'grid.v1.integrations_pb2'
  # @@protoc_insertion_point(class_scope:grid.v1.SetGitHubTokenResponse)
  })
_sym_db.RegisterMessage(SetGitHubTokenResponse)


DESCRIPTOR._options = None

_INTEGRATIONSERVICE = _descriptor.ServiceDescriptor(
  name='IntegrationService',
  full_name='grid.v1.IntegrationService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=481,
  serialized_end=667,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetGitHubToken',
    full_name='grid.v1.IntegrationService.GetGitHubToken',
    index=0,
    containing_service=None,
    input_type=_GETGITHUBTOKENREQUEST,
    output_type=_GETGITHUBTOKENRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetGitHubToken',
    full_name='grid.v1.IntegrationService.SetGitHubToken',
    index=1,
    containing_service=None,
    input_type=_SETGITHUBTOKENREQUEST,
    output_type=_SETGITHUBTOKENRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_INTEGRATIONSERVICE)

DESCRIPTOR.services_by_name['IntegrationService'] = _INTEGRATIONSERVICE

# @@protoc_insertion_point(module_scope)
