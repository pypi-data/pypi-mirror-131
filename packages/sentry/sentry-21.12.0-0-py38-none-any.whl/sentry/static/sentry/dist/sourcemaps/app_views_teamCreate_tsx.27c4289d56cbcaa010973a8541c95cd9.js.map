{"version":3,"file":"chunks/app_views_teamCreate_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"qnBAaA,MAAMA,UAAqBC,EAAAA,UAAiB,iDAU5B,IAAIC,EAAAA,KAVwB,4BAY3B,MACbC,EAAAA,EAAAA,IAAOC,KAAKC,KAAKC,MAAK,IAAMC,OAAOC,SAASC,OAAO,oBAZrDC,4BACEC,SAASC,KAAKC,UAAUC,IAAI,UAG9BC,uBACEX,KAAKC,IAAIW,QACTL,SAASC,KAAKC,UAAUI,OAAO,UASjCC,SACE,OACE,eAAKC,UAAU,MAAf,WACE,eAAKA,UAAU,gBACf,eAAKA,UAAU,YAAYC,MAAO,CAACC,SAAUjB,KAAKkB,MAAMD,UAAxD,UACE,eAAKF,UAAU,gBAAf,WACE,eAAKA,UAAU,aAAf,WACE,aAAGI,KAAK,IAAR,UACE,QAAC,KAAD,CAAYC,KAAK,SAElBpB,KAAKkB,MAAMG,aACV,aAAGN,UAAU,oBAAoBO,QAAStB,KAAKuB,aAA/C,UACE,QAACC,EAAD,WAASC,EAAAA,EAAAA,GAAE,oBAIjB,eAAKV,UAAU,2BAAf,SAA2Cf,KAAKkB,MAAMQ,oBAhC5D9B,EAAAA,YAAAA,eAwCN,MAAM4B,GAAS,OAAO,OAAP,qBAAH,0CAIZ,K,0iBCrCe,MAAMG,UAAuB9B,EAAAA,UAAiB,2DAC5C,CAAC+B,EAA2BC,EAAqBC,MAC9DC,EAAAA,EAAAA,GAAe/B,KAAKkB,MAAMc,SAAUJ,EAAiBC,EAAWC,OAFP,uCAKhCF,KACzBG,EAAAA,EAAAA,GAAe/B,KAAKkB,MAAMW,UAAWD,MAGvCd,SACE,MAAM,aAACmB,GAAgBjC,KAAKkB,MAE5B,OACE,QAAC,EAAAgB,SAAD,YACE,uBACGT,EAAAA,EAAAA,GACC,2GAIJ,QAAC,IAAD,CACEU,aAAaV,EAAAA,EAAAA,GAAE,eACfW,YAAW,yBAAoBH,EAAaI,KAAjC,WACXC,UAAU,OACVN,SAAUhC,KAAKuC,aACfC,gBAAiBxC,KAAKyC,wBACtBC,gBAAc,EACd,eAAa,sBACT1C,KAAKkB,MAAMyB,UARjB,UAUE,QAAC,IAAD,CACEC,KAAK,OACLC,OAAOpB,EAAAA,EAAAA,GAAE,aACTqB,aAAarB,EAAAA,EAAAA,GAAE,0CACfsB,MAAMtB,EAAAA,EAAAA,GAAE,mEACRuB,UAAQ,EACRC,SAAO,EACPC,0BAAwB,EACxBC,QAAQ,EACRC,eAAgBC,EAAAA,UAvCP1B,EAAAA,YAAAA,kB,oCClBN,SAAS0B,EAAQC,GAC9B,MAAsB,iBAARA,EAAmBA,EAAIC,cAAcC,QAAQ,IAAK,KAAO,G,sWCK1D,MAAMC,UAGXC,EAAAA,EACRC,WACE,MAAO,GAGT7C,SACE,OACE,QAAC,IAAD,CAAqB8C,MAAO5D,KAAK2D,WAAjC,SACG3D,KAAK6D,qBAXOJ,EAAAA,YAAAA,a,gjBCKrB,MAAMK,UAAmBL,EAAAA,EAAiB,kEASlB7B,IACpB,MAAM,MAACmC,GAAS/D,KAAKkB,MAAM8C,OACrBC,EAAc,aAAH,OAAgBF,EAAhB,kBAA+BnC,EAAKS,KAApC,KACjBrC,KAAKkB,MAAMgD,OAAOC,KAAKF,MAXzBN,WACE,OAAOlC,EAAAA,EAAAA,GAAE,eAGX2C,eACE,MAAO,GASTC,aACE,OACE,QAAC,IAAD,YACE,wBAAK5C,EAAAA,EAAAA,GAAE,wBAEP,QAAC,IAAD,CACEI,UAAW7B,KAAKsE,oBAChBrC,aAAcjC,KAAKkB,MAAMe,mBAQnC,SAAesC,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,GAAiBV","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/components/teams/createTeamForm.tsx","webpack:///./app/utils/slugify.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/teamCreate.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Client} from 'sentry/api';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  showLogout?: boolean;\n  maxWidth?: string;\n};\n\nclass NarrowLayout extends Component<Props> {\n  UNSAFE_componentWillMount() {\n    document.body.classList.add('narrow');\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.body.classList.remove('narrow');\n  }\n\n  private api = new Client();\n\n  handleLogout = () => {\n    logout(this.api).then(() => window.location.assign('/auth/login'));\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"pattern-bg\" />\n        <div className=\"container\" style={{maxWidth: this.props.maxWidth}}>\n          <div className=\"box box-modal\">\n            <div className=\"box-header\">\n              <a href=\"/\">\n                <IconSentry size=\"lg\" />\n              </a>\n              {this.props.showLogout && (\n                <a className=\"logout pull-right\" onClick={this.handleLogout}>\n                  <Logout>{t('Sign out')}</Logout>\n                </a>\n              )}\n            </div>\n            <div className=\"box-content with-padding\">{this.props.children}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Logout = styled('span')`\n  font-size: 16px;\n`;\n\nexport default NarrowLayout;\n","import {Component, Fragment} from 'react';\n\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport slugify from 'sentry/utils/slugify';\nimport Form from 'sentry/views/settings/components/forms/form';\nimport TextField from 'sentry/views/settings/components/forms/textField';\n\ntype Payload = {\n  slug: string;\n};\n\ntype Props = {\n  organization: Organization;\n  onSubmit?: (data: Payload, onSuccess: Function, onError: Function) => void;\n  onSuccess?: (data: Payload) => void;\n  formProps?: Partial<typeof Form>;\n};\n\nexport default class CreateTeamForm extends Component<Props> {\n  handleSubmit = (data: Record<string, any>, onSuccess: Function, onError: Function) => {\n    callIfFunction(this.props.onSubmit, data as Payload, onSuccess, onError);\n  };\n\n  handleCreateTeamSuccess = (data: Payload) => {\n    callIfFunction(this.props.onSuccess, data);\n  };\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <Fragment>\n        <p>\n          {t(\n            'Members of a team have access to specific areas, such as a new release or a new application feature.'\n          )}\n        </p>\n\n        <Form\n          submitLabel={t('Create Team')}\n          apiEndpoint={`/organizations/${organization.slug}/teams/`}\n          apiMethod=\"POST\"\n          onSubmit={this.handleSubmit}\n          onSubmitSuccess={this.handleCreateTeamSuccess}\n          requireChanges\n          data-test-id=\"create-team-form\"\n          {...this.props.formProps}\n        >\n          <TextField\n            name=\"slug\"\n            label={t('Team Name')}\n            placeholder={t('e.g. operations, web-frontend, desktop')}\n            help={t('May contain lowercase letters, numbers, dashes and underscores.')}\n            required\n            stacked\n            flexibleControlStateSize\n            inline={false}\n            transformInput={slugify}\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n}\n","// XXX: This is NOT an exhaustive slugify function\n// Only forces lowercase and replaces spaces with hyphens\nexport default function slugify(str: any): string {\n  return typeof str === 'string' ? str.toLowerCase().replace(' ', '-') : '';\n}\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {withRouter, WithRouterProps} from 'react-router';\n\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport CreateTeamForm from 'sentry/components/teams/createTeamForm';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Props = WithRouterProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\nclass TeamCreate extends AsyncView<Props> {\n  getTitle() {\n    return t('Create Team');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [];\n  }\n\n  handleSubmitSuccess = data => {\n    const {orgId} = this.props.params;\n    const redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;\n    this.props.router.push(redirectUrl);\n  };\n\n  renderBody() {\n    return (\n      <NarrowLayout>\n        <h3>{t('Create a New Team')}</h3>\n\n        <CreateTeamForm\n          onSuccess={this.handleSubmitSuccess}\n          organization={this.props.organization}\n        />\n      </NarrowLayout>\n    );\n  }\n}\n\nexport {TeamCreate};\nexport default withRouter(withOrganization(TeamCreate));\n"],"names":["NarrowLayout","Component","Client","logout","this","api","then","window","location","assign","UNSAFE_componentWillMount","document","body","classList","add","componentWillUnmount","clear","remove","render","className","style","maxWidth","props","href","size","showLogout","onClick","handleLogout","Logout","t","children","CreateTeamForm","data","onSuccess","onError","callIfFunction","onSubmit","organization","Fragment","submitLabel","apiEndpoint","slug","apiMethod","handleSubmit","onSubmitSuccess","handleCreateTeamSuccess","requireChanges","formProps","name","label","placeholder","help","required","stacked","flexibleControlStateSize","inline","transformInput","slugify","str","toLowerCase","replace","AsyncView","AsyncComponent","getTitle","title","renderComponent","TeamCreate","orgId","params","redirectUrl","router","push","getEndpoints","renderBody","handleSubmitSuccess","withRouter","withOrganization"],"sourceRoot":""}