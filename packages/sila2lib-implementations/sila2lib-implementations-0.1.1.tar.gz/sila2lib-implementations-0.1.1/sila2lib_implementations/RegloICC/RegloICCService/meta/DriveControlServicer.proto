// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2020-04-16 12:19:57
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.org.silastandard.examples.drivecontrolservicer.v1;

// Feature: Drive Control Servicer
//   
//                   Set and retrieve information regarding the pump drive.
//           By Valeryia Sidarava, Institute of Biochemical Engineering, Technical University of Munich, 31.07.2019,
//           Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.04.2020.
//   
service DriveControlServicer {
    // Start Pump
    //   
    //             Starts the pump out of stand-by mode.
    //   
    rpc StartPump(sila2.org.silastandard.examples.drivecontrolservicer.v1.StartPump_Parameters) returns (sila2.org.silastandard.examples.drivecontrolservicer.v1.StartPump_Responses) {}
    // Stop
    //   
    //               Stops the pump.
    //   
    rpc Stop(sila2.org.silastandard.examples.drivecontrolservicer.v1.Stop_Parameters) returns (sila2.org.silastandard.examples.drivecontrolservicer.v1.Stop_Responses) {}
    // Get Pump Direction
    //   Get pump direction.
    rpc GetPumpDirection(sila2.org.silastandard.examples.drivecontrolservicer.v1.GetPumpDirection_Parameters) returns (sila2.org.silastandard.examples.drivecontrolservicer.v1.GetPumpDirection_Responses) {}
    // Set Direction to clockwise
    //   Set the rotation direction of the pump to clockwise
    rpc SetDirectionClockwise(sila2.org.silastandard.examples.drivecontrolservicer.v1.SetDirectionClockwise_Parameters) returns (sila2.org.silastandard.examples.drivecontrolservicer.v1.SetDirectionClockwise_Responses) {}
    // Set Direction to counter-clockwise
    //   Set the rotation direction of the pump to counter-clockwise
    rpc SetDirectionCounterClockwise(sila2.org.silastandard.examples.drivecontrolservicer.v1.SetDirectionCounterClockwise_Parameters) returns (sila2.org.silastandard.examples.drivecontrolservicer.v1.SetDirectionCounterClockwise_Responses) {}
    // Get Cause Response
    //   Get cause of "-" cannot run response = Parameter 1 :
    //                         C=Cycle count of 0 / R=Max flow rate exceeded or flow rate is set to 0 / V=Max volume exceeded;
    //                         Limiting value that was exceeded = Parameter 2:
    //                       C=Value is undefined / R=Max flow (mL/min) / V=Max volume (mL)   .
    rpc GetCauseResponse(sila2.org.silastandard.examples.drivecontrolservicer.v1.GetCauseResponse_Parameters) returns (sila2.org.silastandard.examples.drivecontrolservicer.v1.GetCauseResponse_Responses) {}
    
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message StartPump_Parameters {
    sila2.org.silastandard.Integer Start = 1;
}

message StartPump_Responses {
    sila2.org.silastandard.String StartStatus = 1;
}

message Stop_Parameters {
    sila2.org.silastandard.Integer Stop = 1;
}

message Stop_Responses {
    sila2.org.silastandard.String StopStatus = 1;
}

message GetPumpDirection_Parameters {
    sila2.org.silastandard.Integer Channel = 1;
}

message GetPumpDirection_Responses {
    sila2.org.silastandard.String PumpDirection = 1;
}

message SetDirectionClockwise_Parameters {
    sila2.org.silastandard.Integer Channel = 1;
}

message SetDirectionClockwise_Responses {
    sila2.org.silastandard.String SetDirectionSet = 1;
}

message SetDirectionCounterClockwise_Parameters {
    sila2.org.silastandard.Integer Channel = 1;
}

message SetDirectionCounterClockwise_Responses {
    sila2.org.silastandard.String SetDirectionSet = 1;
}

message GetCauseResponse_Parameters {
    sila2.org.silastandard.Integer Channel = 1;
}

message GetCauseResponse_Responses {
    sila2.org.silastandard.String Cause = 1;
}


// ----------------- Metadata Definitions ------------------
