# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import DeviceService_pb2 as DeviceService__pb2


class DeviceServiceStub(object):
    """Feature: Device Service

    Delivers full information of the device, actual parameters, relevant information and allows modification
    of device parameters
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    12.02.2020

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetIdentificationString = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetIdentificationString',
                request_serializer=DeviceService__pb2.GetIdentificationString_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetIdentificationString_Responses.FromString,
                )
        self.GetPrimaryNodeAddress = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetPrimaryNodeAddress',
                request_serializer=DeviceService__pb2.GetPrimaryNodeAddress_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetPrimaryNodeAddress_Responses.FromString,
                )
        self.SetPrimaryNodeAddress = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/SetPrimaryNodeAddress',
                request_serializer=DeviceService__pb2.SetPrimaryNodeAddress_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.SetPrimaryNodeAddress_Responses.FromString,
                )
        self.GetSecondaryNodeAddress = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSecondaryNodeAddress',
                request_serializer=DeviceService__pb2.GetSecondaryNodeAddress_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetSecondaryNodeAddress_Responses.FromString,
                )
        self.GetNextNodeAddress = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetNextNodeAddress',
                request_serializer=DeviceService__pb2.GetNextNodeAddress_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetNextNodeAddress_Responses.FromString,
                )
        self.GetLastNodeAddress = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetLastNodeAddress',
                request_serializer=DeviceService__pb2.GetLastNodeAddress_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetLastNodeAddress_Responses.FromString,
                )
        self.GetSensorType = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSensorType',
                request_serializer=DeviceService__pb2.GetSensorType_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetSensorType_Responses.FromString,
                )
        self.GetAlarmInformation = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetAlarmInformation',
                request_serializer=DeviceService__pb2.GetAlarmInformation_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetAlarmInformation_Responses.FromString,
                )
        self.GetDeviceType = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetDeviceType',
                request_serializer=DeviceService__pb2.GetDeviceType_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetDeviceType_Responses.FromString,
                )
        self.GetFirmwareVersion = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetFirmwareVersion',
                request_serializer=DeviceService__pb2.GetFirmwareVersion_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetFirmwareVersion_Responses.FromString,
                )
        self.GetPressureSensorType = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetPressureSensorType',
                request_serializer=DeviceService__pb2.GetPressureSensorType_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetPressureSensorType_Responses.FromString,
                )
        self.GetSensorName = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSensorName',
                request_serializer=DeviceService__pb2.GetSensorName_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetSensorName_Responses.FromString,
                )
        self.GetIdentificationNumber = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetIdentificationNumber',
                request_serializer=DeviceService__pb2.GetIdentificationNumber_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetIdentificationNumber_Responses.FromString,
                )
        self.GetPowerMode = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetPowerMode',
                request_serializer=DeviceService__pb2.GetPowerMode_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetPowerMode_Responses.FromString,
                )
        self.GetBusDiagnostic = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetBusDiagnostic',
                request_serializer=DeviceService__pb2.GetBusDiagnostic_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetBusDiagnostic_Responses.FromString,
                )
        self.GetFieldbus = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetFieldbus',
                request_serializer=DeviceService__pb2.GetFieldbus_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetFieldbus_Responses.FromString,
                )
        self.GetInstrumentProperties = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetInstrumentProperties',
                request_serializer=DeviceService__pb2.GetInstrumentProperties_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetInstrumentProperties_Responses.FromString,
                )
        self.GetCommunicationProtocol = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetCommunicationProtocol',
                request_serializer=DeviceService__pb2.GetCommunicationProtocol_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetCommunicationProtocol_Responses.FromString,
                )
        self.SetCommunicationProtocol = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/SetCommunicationProtocol',
                request_serializer=DeviceService__pb2.SetCommunicationProtocol_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.SetCommunicationProtocol_Responses.FromString,
                )
        self.GetSerialPort = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSerialPort',
                request_serializer=DeviceService__pb2.GetSerialPort_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.GetSerialPort_Responses.FromString,
                )
        self.SetSerialPort = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/SetSerialPort',
                request_serializer=DeviceService__pb2.SetSerialPort_Parameters.SerializeToString,
                response_deserializer=DeviceService__pb2.SetSerialPort_Responses.FromString,
                )


class DeviceServiceServicer(object):
    """Feature: Device Service

    Delivers full information of the device, actual parameters, relevant information and allows modification
    of device parameters
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    12.02.2020

    """

    def GetIdentificationString(self, request, context):
        """Get Identification String
        Identification number of the device and software version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrimaryNodeAddress(self, request, context):
        """Get primary node address 
        Primary node address: network parameter Flow-Bus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPrimaryNodeAddress(self, request, context):
        """Set primary node address
        Primary node address: network parameter Flow-Bus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSecondaryNodeAddress(self, request, context):
        """Get secondary node address 
        Secondary node address: network parameter Flow-Bus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextNodeAddress(self, request, context):
        """Get next node address
        Next node address: network parameter Flow-Bus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastNodeAddress(self, request, context):
        """Get last node address 
        Last node address: network parameter Flow-Bus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSensorType(self, request, context):
        """Get sensor type
        Sensor type information for actual reading and sensor/controller indication
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlarmInformation(self, request, context):
        """Get alarm information
        Information of several alarms/errors in the instrument
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceType(self, request, context):
        """Get device type
        Flow bus device type information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFirmwareVersion(self, request, context):
        """Get firmware version
        revision number of the firmware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPressureSensorType(self, request, context):
        """Get pressure sensor type
        type of pressure sensor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSensorName(self, request, context):
        """Get sensor name
        label with information about stop sensor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIdentificationNumber(self, request, context):
        """Get identification number
        Identification number type of instrument/device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPowerMode(self, request, context):
        """Get power mode
        power suppy indication in Vdc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBusDiagnostic(self, request, context):
        """Get bus diagnostic
        Fieldbus baudrate (top interface)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFieldbus(self, request, context):
        """Get fieldbus string
        Fieldbus string name of the top interface
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstrumentProperties(self, request, context):
        """Get instrument properties
        instrument properties
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCommunicationProtocol(self, request, context):
        """Get communication protocol

        Current communication protocol between the program adn the device.
        2 possible options: "binary" and "ascii"

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCommunicationProtocol(self, request, context):
        """Set communication protocol

        Allows to choose the communication protocol between the program adn the device.
        2 possible options:_ "binary" and "ascii"

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSerialPort(self, request, context):
        """Get serial port
        Current devices serial port
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSerialPort(self, request, context):
        """Set serial port

        Sets devices new serial port

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetIdentificationString': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIdentificationString,
                    request_deserializer=DeviceService__pb2.GetIdentificationString_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetIdentificationString_Responses.SerializeToString,
            ),
            'GetPrimaryNodeAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrimaryNodeAddress,
                    request_deserializer=DeviceService__pb2.GetPrimaryNodeAddress_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetPrimaryNodeAddress_Responses.SerializeToString,
            ),
            'SetPrimaryNodeAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPrimaryNodeAddress,
                    request_deserializer=DeviceService__pb2.SetPrimaryNodeAddress_Parameters.FromString,
                    response_serializer=DeviceService__pb2.SetPrimaryNodeAddress_Responses.SerializeToString,
            ),
            'GetSecondaryNodeAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecondaryNodeAddress,
                    request_deserializer=DeviceService__pb2.GetSecondaryNodeAddress_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetSecondaryNodeAddress_Responses.SerializeToString,
            ),
            'GetNextNodeAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextNodeAddress,
                    request_deserializer=DeviceService__pb2.GetNextNodeAddress_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetNextNodeAddress_Responses.SerializeToString,
            ),
            'GetLastNodeAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastNodeAddress,
                    request_deserializer=DeviceService__pb2.GetLastNodeAddress_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetLastNodeAddress_Responses.SerializeToString,
            ),
            'GetSensorType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSensorType,
                    request_deserializer=DeviceService__pb2.GetSensorType_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetSensorType_Responses.SerializeToString,
            ),
            'GetAlarmInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmInformation,
                    request_deserializer=DeviceService__pb2.GetAlarmInformation_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetAlarmInformation_Responses.SerializeToString,
            ),
            'GetDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceType,
                    request_deserializer=DeviceService__pb2.GetDeviceType_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetDeviceType_Responses.SerializeToString,
            ),
            'GetFirmwareVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFirmwareVersion,
                    request_deserializer=DeviceService__pb2.GetFirmwareVersion_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetFirmwareVersion_Responses.SerializeToString,
            ),
            'GetPressureSensorType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPressureSensorType,
                    request_deserializer=DeviceService__pb2.GetPressureSensorType_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetPressureSensorType_Responses.SerializeToString,
            ),
            'GetSensorName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSensorName,
                    request_deserializer=DeviceService__pb2.GetSensorName_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetSensorName_Responses.SerializeToString,
            ),
            'GetIdentificationNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIdentificationNumber,
                    request_deserializer=DeviceService__pb2.GetIdentificationNumber_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetIdentificationNumber_Responses.SerializeToString,
            ),
            'GetPowerMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPowerMode,
                    request_deserializer=DeviceService__pb2.GetPowerMode_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetPowerMode_Responses.SerializeToString,
            ),
            'GetBusDiagnostic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBusDiagnostic,
                    request_deserializer=DeviceService__pb2.GetBusDiagnostic_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetBusDiagnostic_Responses.SerializeToString,
            ),
            'GetFieldbus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFieldbus,
                    request_deserializer=DeviceService__pb2.GetFieldbus_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetFieldbus_Responses.SerializeToString,
            ),
            'GetInstrumentProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstrumentProperties,
                    request_deserializer=DeviceService__pb2.GetInstrumentProperties_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetInstrumentProperties_Responses.SerializeToString,
            ),
            'GetCommunicationProtocol': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommunicationProtocol,
                    request_deserializer=DeviceService__pb2.GetCommunicationProtocol_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetCommunicationProtocol_Responses.SerializeToString,
            ),
            'SetCommunicationProtocol': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCommunicationProtocol,
                    request_deserializer=DeviceService__pb2.SetCommunicationProtocol_Parameters.FromString,
                    response_serializer=DeviceService__pb2.SetCommunicationProtocol_Responses.SerializeToString,
            ),
            'GetSerialPort': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSerialPort,
                    request_deserializer=DeviceService__pb2.GetSerialPort_Parameters.FromString,
                    response_serializer=DeviceService__pb2.GetSerialPort_Responses.SerializeToString,
            ),
            'SetSerialPort': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSerialPort,
                    request_deserializer=DeviceService__pb2.SetSerialPort_Parameters.FromString,
                    response_serializer=DeviceService__pb2.SetSerialPort_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceService(object):
    """Feature: Device Service

    Delivers full information of the device, actual parameters, relevant information and allows modification
    of device parameters
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    12.02.2020

    """

    @staticmethod
    def GetIdentificationString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetIdentificationString',
            DeviceService__pb2.GetIdentificationString_Parameters.SerializeToString,
            DeviceService__pb2.GetIdentificationString_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrimaryNodeAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetPrimaryNodeAddress',
            DeviceService__pb2.GetPrimaryNodeAddress_Parameters.SerializeToString,
            DeviceService__pb2.GetPrimaryNodeAddress_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPrimaryNodeAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/SetPrimaryNodeAddress',
            DeviceService__pb2.SetPrimaryNodeAddress_Parameters.SerializeToString,
            DeviceService__pb2.SetPrimaryNodeAddress_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSecondaryNodeAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSecondaryNodeAddress',
            DeviceService__pb2.GetSecondaryNodeAddress_Parameters.SerializeToString,
            DeviceService__pb2.GetSecondaryNodeAddress_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextNodeAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetNextNodeAddress',
            DeviceService__pb2.GetNextNodeAddress_Parameters.SerializeToString,
            DeviceService__pb2.GetNextNodeAddress_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastNodeAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetLastNodeAddress',
            DeviceService__pb2.GetLastNodeAddress_Parameters.SerializeToString,
            DeviceService__pb2.GetLastNodeAddress_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSensorType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSensorType',
            DeviceService__pb2.GetSensorType_Parameters.SerializeToString,
            DeviceService__pb2.GetSensorType_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlarmInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetAlarmInformation',
            DeviceService__pb2.GetAlarmInformation_Parameters.SerializeToString,
            DeviceService__pb2.GetAlarmInformation_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetDeviceType',
            DeviceService__pb2.GetDeviceType_Parameters.SerializeToString,
            DeviceService__pb2.GetDeviceType_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFirmwareVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetFirmwareVersion',
            DeviceService__pb2.GetFirmwareVersion_Parameters.SerializeToString,
            DeviceService__pb2.GetFirmwareVersion_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPressureSensorType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetPressureSensorType',
            DeviceService__pb2.GetPressureSensorType_Parameters.SerializeToString,
            DeviceService__pb2.GetPressureSensorType_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSensorName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSensorName',
            DeviceService__pb2.GetSensorName_Parameters.SerializeToString,
            DeviceService__pb2.GetSensorName_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIdentificationNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetIdentificationNumber',
            DeviceService__pb2.GetIdentificationNumber_Parameters.SerializeToString,
            DeviceService__pb2.GetIdentificationNumber_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPowerMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetPowerMode',
            DeviceService__pb2.GetPowerMode_Parameters.SerializeToString,
            DeviceService__pb2.GetPowerMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBusDiagnostic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetBusDiagnostic',
            DeviceService__pb2.GetBusDiagnostic_Parameters.SerializeToString,
            DeviceService__pb2.GetBusDiagnostic_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFieldbus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetFieldbus',
            DeviceService__pb2.GetFieldbus_Parameters.SerializeToString,
            DeviceService__pb2.GetFieldbus_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstrumentProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetInstrumentProperties',
            DeviceService__pb2.GetInstrumentProperties_Parameters.SerializeToString,
            DeviceService__pb2.GetInstrumentProperties_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCommunicationProtocol(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetCommunicationProtocol',
            DeviceService__pb2.GetCommunicationProtocol_Parameters.SerializeToString,
            DeviceService__pb2.GetCommunicationProtocol_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCommunicationProtocol(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/SetCommunicationProtocol',
            DeviceService__pb2.SetCommunicationProtocol_Parameters.SerializeToString,
            DeviceService__pb2.SetCommunicationProtocol_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSerialPort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/GetSerialPort',
            DeviceService__pb2.GetSerialPort_Parameters.SerializeToString,
            DeviceService__pb2.GetSerialPort_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSerialPort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.deviceservice.v1.DeviceService/SetSerialPort',
            DeviceService__pb2.SetSerialPort_Parameters.SerializeToString,
            DeviceService__pb2.SetSerialPort_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
