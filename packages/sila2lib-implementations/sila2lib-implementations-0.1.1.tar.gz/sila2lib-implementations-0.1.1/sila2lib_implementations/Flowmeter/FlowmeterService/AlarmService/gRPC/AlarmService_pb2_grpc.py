# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import AlarmService_pb2 as AlarmService__pb2


class AlarmServiceStub(object):
    """Feature: Alarm Service

    Allows full control of the alarms and limits of the flowmeter
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    02.12.2020

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAlarmLimitMaximum = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmLimitMaximum',
                request_serializer=AlarmService__pb2.GetAlarmLimitMaximum_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.GetAlarmLimitMaximum_Responses.FromString,
                )
        self.SetAlarmLimitMaximum = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmLimitMaximum',
                request_serializer=AlarmService__pb2.SetAlarmLimitMaximum_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.SetAlarmLimitMaximum_Responses.FromString,
                )
        self.GetAlarmLimitMinimum = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmLimitMinimum',
                request_serializer=AlarmService__pb2.GetAlarmLimitMinimum_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.GetAlarmLimitMinimum_Responses.FromString,
                )
        self.SetAlarmLimitMinimum = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmLimitMinimum',
                request_serializer=AlarmService__pb2.SetAlarmLimitMinimum_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.SetAlarmLimitMinimum_Responses.FromString,
                )
        self.GetAlarmMode = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmMode',
                request_serializer=AlarmService__pb2.GetAlarmMode_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.GetAlarmMode_Responses.FromString,
                )
        self.SetAlarmMode = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmMode',
                request_serializer=AlarmService__pb2.SetAlarmMode_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.SetAlarmMode_Responses.FromString,
                )
        self.GetAlarmOutputMode = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmOutputMode',
                request_serializer=AlarmService__pb2.GetAlarmOutputMode_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.GetAlarmOutputMode_Responses.FromString,
                )
        self.SetAlarmOutputMode = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmOutputMode',
                request_serializer=AlarmService__pb2.SetAlarmOutputMode_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.SetAlarmOutputMode_Responses.FromString,
                )
        self.GetAlarmSetpoint = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmSetpoint',
                request_serializer=AlarmService__pb2.GetAlarmSetpoint_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.GetAlarmSetpoint_Responses.FromString,
                )
        self.SetAlarmSetpoint = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmSetpoint',
                request_serializer=AlarmService__pb2.SetAlarmSetpoint_Parameters.SerializeToString,
                response_deserializer=AlarmService__pb2.SetAlarmSetpoint_Responses.FromString,
                )


class AlarmServiceServicer(object):
    """Feature: Alarm Service

    Allows full control of the alarms and limits of the flowmeter
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    02.12.2020

    """

    def GetAlarmLimitMaximum(self, request, context):
        """Get alarm limit maximum
        The current maximum limit for sensor signal to trigger alarm situation.
        Value in percentage. Range between 0 and 100
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlarmLimitMaximum(self, request, context):
        """Set alarm limit maximum
        Set maximum limit for sensor to trigger alarm situation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlarmLimitMinimum(self, request, context):
        """Get alarm limit minimum
        The current minimum limit for sensor signal to trigger alarm situation.
        Value in percentage. Range between 0,0 and 100,0

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlarmLimitMinimum(self, request, context):
        """Set alarm limit minimum

        Minimum limit for sensor to trigger alarm situation to be set. Value in percentage.
        Range from 0.00 to 100.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlarmMode(self, request, context):
        """Get alarm Mode
        Current alarm mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlarmMode(self, request, context):
        """Set alarm mode
        Set the alarm mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlarmOutputMode(self, request, context):
        """Get alarm output mode
        Alarm release mode during alarm situation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlarmOutputMode(self, request, context):
        """Set alarm output mode
        Set alarm release activity mode during alarm situation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlarmSetpoint(self, request, context):
        """Get alarm setpoint

        The threshold value or alarm setpoint which triggers an alarm situation

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAlarmSetpoint(self, request, context):
        """Set alarm setpoint

        Set new alarm setpoint which triggers an alarm situation. 255 different settable modes available

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlarmServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAlarmLimitMaximum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmLimitMaximum,
                    request_deserializer=AlarmService__pb2.GetAlarmLimitMaximum_Parameters.FromString,
                    response_serializer=AlarmService__pb2.GetAlarmLimitMaximum_Responses.SerializeToString,
            ),
            'SetAlarmLimitMaximum': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlarmLimitMaximum,
                    request_deserializer=AlarmService__pb2.SetAlarmLimitMaximum_Parameters.FromString,
                    response_serializer=AlarmService__pb2.SetAlarmLimitMaximum_Responses.SerializeToString,
            ),
            'GetAlarmLimitMinimum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmLimitMinimum,
                    request_deserializer=AlarmService__pb2.GetAlarmLimitMinimum_Parameters.FromString,
                    response_serializer=AlarmService__pb2.GetAlarmLimitMinimum_Responses.SerializeToString,
            ),
            'SetAlarmLimitMinimum': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlarmLimitMinimum,
                    request_deserializer=AlarmService__pb2.SetAlarmLimitMinimum_Parameters.FromString,
                    response_serializer=AlarmService__pb2.SetAlarmLimitMinimum_Responses.SerializeToString,
            ),
            'GetAlarmMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmMode,
                    request_deserializer=AlarmService__pb2.GetAlarmMode_Parameters.FromString,
                    response_serializer=AlarmService__pb2.GetAlarmMode_Responses.SerializeToString,
            ),
            'SetAlarmMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlarmMode,
                    request_deserializer=AlarmService__pb2.SetAlarmMode_Parameters.FromString,
                    response_serializer=AlarmService__pb2.SetAlarmMode_Responses.SerializeToString,
            ),
            'GetAlarmOutputMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmOutputMode,
                    request_deserializer=AlarmService__pb2.GetAlarmOutputMode_Parameters.FromString,
                    response_serializer=AlarmService__pb2.GetAlarmOutputMode_Responses.SerializeToString,
            ),
            'SetAlarmOutputMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlarmOutputMode,
                    request_deserializer=AlarmService__pb2.SetAlarmOutputMode_Parameters.FromString,
                    response_serializer=AlarmService__pb2.SetAlarmOutputMode_Responses.SerializeToString,
            ),
            'GetAlarmSetpoint': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmSetpoint,
                    request_deserializer=AlarmService__pb2.GetAlarmSetpoint_Parameters.FromString,
                    response_serializer=AlarmService__pb2.GetAlarmSetpoint_Responses.SerializeToString,
            ),
            'SetAlarmSetpoint': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAlarmSetpoint,
                    request_deserializer=AlarmService__pb2.SetAlarmSetpoint_Parameters.FromString,
                    response_serializer=AlarmService__pb2.SetAlarmSetpoint_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlarmService(object):
    """Feature: Alarm Service

    Allows full control of the alarms and limits of the flowmeter
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    02.12.2020

    """

    @staticmethod
    def GetAlarmLimitMaximum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmLimitMaximum',
            AlarmService__pb2.GetAlarmLimitMaximum_Parameters.SerializeToString,
            AlarmService__pb2.GetAlarmLimitMaximum_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlarmLimitMaximum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmLimitMaximum',
            AlarmService__pb2.SetAlarmLimitMaximum_Parameters.SerializeToString,
            AlarmService__pb2.SetAlarmLimitMaximum_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlarmLimitMinimum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmLimitMinimum',
            AlarmService__pb2.GetAlarmLimitMinimum_Parameters.SerializeToString,
            AlarmService__pb2.GetAlarmLimitMinimum_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlarmLimitMinimum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmLimitMinimum',
            AlarmService__pb2.SetAlarmLimitMinimum_Parameters.SerializeToString,
            AlarmService__pb2.SetAlarmLimitMinimum_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlarmMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmMode',
            AlarmService__pb2.GetAlarmMode_Parameters.SerializeToString,
            AlarmService__pb2.GetAlarmMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlarmMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmMode',
            AlarmService__pb2.SetAlarmMode_Parameters.SerializeToString,
            AlarmService__pb2.SetAlarmMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlarmOutputMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmOutputMode',
            AlarmService__pb2.GetAlarmOutputMode_Parameters.SerializeToString,
            AlarmService__pb2.GetAlarmOutputMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlarmOutputMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmOutputMode',
            AlarmService__pb2.SetAlarmOutputMode_Parameters.SerializeToString,
            AlarmService__pb2.SetAlarmOutputMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlarmSetpoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/GetAlarmSetpoint',
            AlarmService__pb2.GetAlarmSetpoint_Parameters.SerializeToString,
            AlarmService__pb2.GetAlarmSetpoint_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAlarmSetpoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.alarmservice.v1.AlarmService/SetAlarmSetpoint',
            AlarmService__pb2.SetAlarmSetpoint_Parameters.SerializeToString,
            AlarmService__pb2.SetAlarmSetpoint_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
