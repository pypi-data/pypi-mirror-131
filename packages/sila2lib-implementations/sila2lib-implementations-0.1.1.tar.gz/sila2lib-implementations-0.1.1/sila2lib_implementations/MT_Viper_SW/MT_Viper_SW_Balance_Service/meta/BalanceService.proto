// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.3.6
// :generation date: 2021-04-09 15:29:03
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.org.silastandard.examples.balanceservice.v1;

// Feature: Balance Service
//   
//           This feature enables several modes of weight measuring and allows taring and zeroing of the balance.
//           By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 07.04.2021
//   
service BalanceService {
    // Zero
    //   Set a new zero; all weight values (including tare weight) will be measured relative to this zero. After zeroing has
    //   taken place, the following values applky: tare weight = 0; net weight = (=gross weight) = 0.
    rpc Zero(sila2.org.silastandard.examples.balanceservice.v1.Zero_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.Zero_Responses) {}
    // Zero Immediate
    //   Set a new zero immediately, regardless of balance stability. All weight values (including tare weight) will be measured
    //   relative to this zero. After zeroing has taken place, the following values applky: tare weight = 0; net weight = (=gross
    //   weight) = 0.
    rpc ZeroImmediate(sila2.org.silastandard.examples.balanceservice.v1.ZeroImmediate_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.ZeroImmediate_Responses) {}
    // Tare
    //   Tare the balance. The next stable weight value will be saved in the tare memory.
    rpc Tare(sila2.org.silastandard.examples.balanceservice.v1.Tare_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.Tare_Responses) {}
    // Weight Value on Change
    //   Request the current stable weight value in display unit followed by weight values after predefined minimum weight
    //   changes until the command is stopped, i.e. sends the current stable weight value followed by every load change of
    //   predefined amount of g.
    rpc WeightValueOnChange(sila2.org.silastandard.examples.balanceservice.v1.WeightValueOnChange_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc WeightValueOnChange_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc WeightValueOnChange_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.org.silastandard.examples.balanceservice.v1.WeightValueOnChange_Responses) {}
    // PresetTareWeight
    //   Preset a known tare weight value in g.
    rpc PresetTareWeight(sila2.org.silastandard.examples.balanceservice.v1.PresetTareWeight_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.PresetTareWeight_Responses) {}
    // Clear Tare Value
    //   Clear tare weight value from memory.
    rpc ClearTareValue(sila2.org.silastandard.examples.balanceservice.v1.ClearTareValue_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.ClearTareValue_Responses) {}
    // Tare Immediately
    //   Tare the balance immediately and independently of balance stability.
    rpc TareImmediately(sila2.org.silastandard.examples.balanceservice.v1.TareImmediately_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.TareImmediately_Responses) {}
    // Stable Weight Value
    //   Get the current stable weight value in g.
    rpc Get_StableWeightValue(sila2.org.silastandard.examples.balanceservice.v1.Get_StableWeightValue_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.Get_StableWeightValue_Responses) {}
    // ImmediateWeightValue
    //   Get the immediate (potentially unstable) weight value
    rpc Get_ImmediateWeightValue(sila2.org.silastandard.examples.balanceservice.v1.Get_ImmediateWeightValue_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.Get_ImmediateWeightValue_Responses) {}
    // Current Weight Value
    //   Subscribe to the current weight value
    rpc Subscribe_CurrentWeightValue(sila2.org.silastandard.examples.balanceservice.v1.Subscribe_CurrentWeightValue_Parameters) returns (stream sila2.org.silastandard.examples.balanceservice.v1.Subscribe_CurrentWeightValue_Responses) {}
    // Tare Weight Value
    //   Get the current tare weight value in g.
    rpc Get_TareWeightValue(sila2.org.silastandard.examples.balanceservice.v1.Get_TareWeightValue_Parameters) returns (sila2.org.silastandard.examples.balanceservice.v1.Get_TareWeightValue_Responses) {}
    
}

// ----------------- Data Type definitions -----------------
// Stable Weight Response
//   A Response containing the measured weight and whether the value was measured under stable circumstances.
message DataType_StableWeightResponse {
    message StableWeightResponse_Struct {
        // Weight Value
        //   The immediate weight value
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real WeightValue = 1;
        // Is Stable
        //   Weight value is stable (True/False).
        sila2.org.silastandard.Boolean IsStable = 2;
    }
    sila2.org.silastandard.examples.balanceservice.v1.DataType_StableWeightResponse.StableWeightResponse_Struct StableWeightResponse = 1;
}

// ------ Command Parameter and Response definitions -------
message Zero_Parameters {
    
}

message Zero_Responses {
    sila2.org.silastandard.Boolean Success = 1;
}

message ZeroImmediate_Parameters {
    
}

message ZeroImmediate_Responses {
    sila2.org.silastandard.Boolean Success = 1;
    sila2.org.silastandard.Boolean IsStable = 2;
}

message Tare_Parameters {
    
}

message Tare_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real TareValue = 1;
}

message WeightValueOnChange_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real WeightChange = 1;
}

message WeightValueOnChange_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real WeightValue = 1;
    sila2.org.silastandard.Boolean IsStable = 2;
}

message PresetTareWeight_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real TarePresetValue = 1;
}

message PresetTareWeight_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real TareWeightValue = 1;
}

message ClearTareValue_Parameters {
    
}

message ClearTareValue_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real TareWeightValue = 1;
}

message TareImmediately_Parameters {
    
}

message TareImmediately_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real TareWeightValue = 1;
    sila2.org.silastandard.Boolean IsStable = 2;
}
message Get_StableWeightValue_Parameters {
    // Empty message
}

message Get_StableWeightValue_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real StableWeightValue = 1;
}

message Get_ImmediateWeightValue_Parameters {
    // Empty message
}

message Get_ImmediateWeightValue_Responses {
    sila2.org.silastandard.examples.balanceservice.v1.DataType_StableWeightResponse ImmediateWeightValue = 1;
}

message Subscribe_CurrentWeightValue_Parameters {
    // Empty message
}

message Subscribe_CurrentWeightValue_Responses {
    sila2.org.silastandard.examples.balanceservice.v1.DataType_StableWeightResponse CurrentWeightValue = 1;
}

message Get_TareWeightValue_Parameters {
    // Empty message
}

message Get_TareWeightValue_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real TareWeightValue = 1;
}

// ----------------- Metadata Definitions ------------------
