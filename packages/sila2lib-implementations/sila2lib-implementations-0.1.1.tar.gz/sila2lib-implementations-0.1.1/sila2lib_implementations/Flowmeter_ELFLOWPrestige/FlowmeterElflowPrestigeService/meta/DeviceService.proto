// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-04-14 12:22:07
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.biovt.mw.tum.de.examples.deviceservice.v1;

// Feature: Device Service
//   
//                   Allows full control of the device features of the flowmeter.
//           By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
//   02.12.2020
//   
service DeviceService {
    // Get valve output
    //   
    //               It represents the controller output signal for control valve operation. It goes from 0 to 300mAdc.
    //                   In reality it reaches until 250mAdc
    //   
    rpc GetValveOutput(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetValveOutput_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetValveOutput_Responses) {}
    // Get capacity 100
    //   
    //               This parameter sets the maximum readout/control value (100%) for the current fluid in readout units
    //   corresponding to Capacity Unit.
    //   
    rpc GetCapacity100(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetCapacity100_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetCapacity100_Responses) {}
    // Get capacity unit
    //   
    //               This parameter defines the units in which is the measured value and set value are represented.
    //   
    rpc GetCapacityUnit(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetCapacityUnit_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetCapacityUnit_Responses) {}
    // Get serial number
    //   Serial number of the device and software version
    rpc GetSerialNumber(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetSerialNumber_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetSerialNumber_Responses) {}
    // Get primary node address 
    //   Primary node address: network parameter Flow-Bus
    rpc GetPrimaryNodeAddress(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetPrimaryNodeAddress_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetPrimaryNodeAddress_Responses) {}
    // Get firmware version
    //    revision number of the firmware
    rpc GetFirmwareVersion(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetFirmwareVersion_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetFirmwareVersion_Responses) {}
    // Get communication protocol
    //   
    //               Current communication protocol between the program adn the device.
    //               2 possible options: "binary" and "ascii"
    //               Binary is the default protocol
    //   
    rpc GetCommunicationProtocol(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetCommunicationProtocol_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetCommunicationProtocol_Responses) {}
    // Set communication protocol binary
    //   
    //               it sets the protocol communication to binary
    //   
    rpc SetCommunicationProtocolBinary(sila2.biovt.mw.tum.de.examples.deviceservice.v1.SetCommunicationProtocolBinary_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.SetCommunicationProtocolBinary_Responses) {}
    // Set communication protocol ascii
    //   
    //               it sets the protocol communication to ascii
    //   
    rpc SetCommunicationProtocolAscii(sila2.biovt.mw.tum.de.examples.deviceservice.v1.SetCommunicationProtocolAscii_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.SetCommunicationProtocolAscii_Responses) {}
    // Get serial port
    //   Current devices serial port. "50001" is the predefined value
    rpc GetSerialPort(sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetSerialPort_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.GetSerialPort_Responses) {}
    // Set serial port
    //   
    //               Sets devices new serial port
    //   
    rpc SetSerialPort(sila2.biovt.mw.tum.de.examples.deviceservice.v1.SetSerialPort_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservice.v1.SetSerialPort_Responses) {}
    
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message GetValveOutput_Parameters {
    
}

message GetValveOutput_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real CurrentValveOutput = 1;
}

message GetCapacity100_Parameters {
    
}

message GetCapacity100_Responses {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real CurrentCapacity100 = 1;
}

message GetCapacityUnit_Parameters {
    
}

message GetCapacityUnit_Responses {
    sila2.org.silastandard.String CurrentCapacityUnit = 1;
}

message GetSerialNumber_Parameters {
    
}

message GetSerialNumber_Responses {
    sila2.org.silastandard.String CurrentSerialNumber = 1;
}

message GetPrimaryNodeAddress_Parameters {
    
}

message GetPrimaryNodeAddress_Responses {
    sila2.org.silastandard.String CurrentPrimaryNodeAddress = 1;
}

message GetFirmwareVersion_Parameters {
    
}

message GetFirmwareVersion_Responses {
    sila2.org.silastandard.String CurrentFirmwareVersion = 1;
}

message GetCommunicationProtocol_Parameters {
    
}

message GetCommunicationProtocol_Responses {
    sila2.org.silastandard.String CurrentCommunicationProtocol = 1;
}

message SetCommunicationProtocolBinary_Parameters {
    
}

message SetCommunicationProtocolBinary_Responses {
    sila2.org.silastandard.String CurrentCommunicationProtocolBinary = 1;
}

message SetCommunicationProtocolAscii_Parameters {
    
}

message SetCommunicationProtocolAscii_Responses {
    sila2.org.silastandard.String CurrentCommunicationProtocolAscii = 1;
}

message GetSerialPort_Parameters {
    
}

message GetSerialPort_Responses {
    sila2.org.silastandard.String CurrentSerialPort = 1;
}

message SetSerialPort_Parameters {
    sila2.org.silastandard.String SetSerialPort = 1;
}

message SetSerialPort_Responses {
    sila2.org.silastandard.String NewSerialPort = 1;
}


// ----------------- Metadata Definitions ------------------
