# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import MotorServicer_pb2 as MotorServicer__pb2


class MotorServicerStub(object):
  """Feature: Motor Servicer

  Allows full control of the stirrer speed and power. Starts and stops the stirrer of the bioREACTOR48.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 12.02.2020

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartStirrer = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer/StartStirrer',
        request_serializer=MotorServicer__pb2.StartStirrer_Parameters.SerializeToString,
        response_deserializer=MotorServicer__pb2.StartStirrer_Responses.FromString,
        )
    self.StopStirrer = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer/StopStirrer',
        request_serializer=MotorServicer__pb2.StopStirrer_Parameters.SerializeToString,
        response_deserializer=MotorServicer__pb2.StopStirrer_Responses.FromString,
        )
    self.SetRPM = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer/SetRPM',
        request_serializer=MotorServicer__pb2.SetRPM_Parameters.SerializeToString,
        response_deserializer=MotorServicer__pb2.SetRPM_Responses.FromString,
        )
    self.GetRPM = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer/GetRPM',
        request_serializer=MotorServicer__pb2.GetRPM_Parameters.SerializeToString,
        response_deserializer=MotorServicer__pb2.GetRPM_Responses.FromString,
        )
    self.SetPower = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer/SetPower',
        request_serializer=MotorServicer__pb2.SetPower_Parameters.SerializeToString,
        response_deserializer=MotorServicer__pb2.SetPower_Responses.FromString,
        )
    self.GetPower = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer/GetPower',
        request_serializer=MotorServicer__pb2.GetPower_Parameters.SerializeToString,
        response_deserializer=MotorServicer__pb2.GetPower_Responses.FromString,
        )


class MotorServicerServicer(object):
  """Feature: Motor Servicer

  Allows full control of the stirrer speed and power. Starts and stops the stirrer of the bioREACTOR48.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 12.02.2020

  """

  def StartStirrer(self, request, context):
    """Start Stirrer
    Start the magnetic stirrer.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopStirrer(self, request, context):
    """Stop Stirrer
    Stop the magnetic stirrer.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRPM(self, request, context):
    """Set RPM
    Set the stirrer rpm.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRPM(self, request, context):
    """Get RPM
    Get the current rpm of the stirrer.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetPower(self, request, context):
    """Set Power
    Set the stirrer power in %.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPower(self, request, context):
    """Get Power
    Get the current power input of the stirrer in %.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MotorServicerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartStirrer': grpc.unary_unary_rpc_method_handler(
          servicer.StartStirrer,
          request_deserializer=MotorServicer__pb2.StartStirrer_Parameters.FromString,
          response_serializer=MotorServicer__pb2.StartStirrer_Responses.SerializeToString,
      ),
      'StopStirrer': grpc.unary_unary_rpc_method_handler(
          servicer.StopStirrer,
          request_deserializer=MotorServicer__pb2.StopStirrer_Parameters.FromString,
          response_serializer=MotorServicer__pb2.StopStirrer_Responses.SerializeToString,
      ),
      'SetRPM': grpc.unary_unary_rpc_method_handler(
          servicer.SetRPM,
          request_deserializer=MotorServicer__pb2.SetRPM_Parameters.FromString,
          response_serializer=MotorServicer__pb2.SetRPM_Responses.SerializeToString,
      ),
      'GetRPM': grpc.unary_unary_rpc_method_handler(
          servicer.GetRPM,
          request_deserializer=MotorServicer__pb2.GetRPM_Parameters.FromString,
          response_serializer=MotorServicer__pb2.GetRPM_Responses.SerializeToString,
      ),
      'SetPower': grpc.unary_unary_rpc_method_handler(
          servicer.SetPower,
          request_deserializer=MotorServicer__pb2.SetPower_Parameters.FromString,
          response_serializer=MotorServicer__pb2.SetPower_Responses.SerializeToString,
      ),
      'GetPower': grpc.unary_unary_rpc_method_handler(
          servicer.GetPower,
          request_deserializer=MotorServicer__pb2.GetPower_Parameters.FromString,
          response_serializer=MotorServicer__pb2.GetPower_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.biovt.mw.tum.de.examples.motorservicer.v1.MotorServicer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
