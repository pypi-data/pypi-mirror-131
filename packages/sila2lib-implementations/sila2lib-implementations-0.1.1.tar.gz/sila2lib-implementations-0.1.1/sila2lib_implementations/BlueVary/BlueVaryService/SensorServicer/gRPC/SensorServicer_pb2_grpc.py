# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import SensorServicer_pb2 as SensorServicer__pb2


class SensorServicerStub(object):
  """Feature: Sensor Servicer

  Read out the off-gas analytics sensor data for gas1 and gas2.Gas concentrations [vol.-%], pressure
  [mbar], humidity [%], temperature[C] and absolute humidity [vol.-%] are provided.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetResults = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorservicer.v1.SensorServicer/GetResults',
        request_serializer=SensorServicer__pb2.GetResults_Parameters.SerializeToString,
        response_deserializer=SensorServicer__pb2.GetResults_Responses.FromString,
        )
    self.GetHumidity = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorservicer.v1.SensorServicer/GetHumidity',
        request_serializer=SensorServicer__pb2.GetHumidity_Parameters.SerializeToString,
        response_deserializer=SensorServicer__pb2.GetHumidity_Responses.FromString,
        )


class SensorServicerServicer(object):
  """Feature: Sensor Servicer

  Read out the off-gas analytics sensor data for gas1 and gas2.Gas concentrations [vol.-%], pressure
  [mbar], humidity [%], temperature[C] and absolute humidity [vol.-%] are provided.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def GetResults(self, request, context):
    """Get Sensor Results

    Get the current gas concentrations for CO2 and O2 in [vol.-%] and the pressure readings in [mbar].

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetHumidity(self, request, context):
    """Get Humidity Results

    Get the current humidity [%], temperature [C] and absolute humidity [vol.-%].

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SensorServicerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetResults': grpc.unary_unary_rpc_method_handler(
          servicer.GetResults,
          request_deserializer=SensorServicer__pb2.GetResults_Parameters.FromString,
          response_serializer=SensorServicer__pb2.GetResults_Responses.SerializeToString,
      ),
      'GetHumidity': grpc.unary_unary_rpc_method_handler(
          servicer.GetHumidity,
          request_deserializer=SensorServicer__pb2.GetHumidity_Parameters.FromString,
          response_serializer=SensorServicer__pb2.GetHumidity_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.biovt.mw.tum.de.examples.sensorservicer.v1.SensorServicer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
