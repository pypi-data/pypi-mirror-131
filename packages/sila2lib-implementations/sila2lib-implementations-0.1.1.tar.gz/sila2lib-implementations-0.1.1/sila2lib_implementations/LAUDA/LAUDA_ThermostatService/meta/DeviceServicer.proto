// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2020-04-17 14:22:01
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.org.silastandard.examples.deviceservicer.v1;

// Feature: Device Servicer
//   
//           General device settings can be retrieved and changed within this function.
//           By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019
//   
service DeviceServicer {
    // Get Log
    //   Get the current status of the device from the state machine of the SiLA server.
    rpc GetLog(sila2.org.silastandard.examples.deviceservicer.v1.GetLog_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc GetLog_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc GetLog_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.org.silastandard.examples.deviceservicer.v1.GetLog_Responses) {}
    // Set Key Lock Mode
    //   
    //           Set the lock mode of the keyboard lock.
    //   
    rpc SetKeyLockMode(sila2.org.silastandard.examples.deviceservicer.v1.SetKeyLockMode_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.SetKeyLockMode_Responses) {}
    // Get Key Lock MOde
    //   Get mode of the keyboard lock feature. 0=unlocked, 1=locked.
    rpc GetKeyLockMode(sila2.org.silastandard.examples.deviceservicer.v1.GetKeyLockMode_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.GetKeyLockMode_Responses) {}
    // Start The Thermostat
    //   
    //           Starts the thermostat out of stand-by mode.
    //   
    rpc StartThermostat(sila2.org.silastandard.examples.deviceservicer.v1.StartThermostat_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.StartThermostat_Responses) {}
    // Stop Thermostat
    //   
    //           Stops the thermostat and puts it into stand-by mode.
    //   
    rpc StopThermostat(sila2.org.silastandard.examples.deviceservicer.v1.StopThermostat_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.StopThermostat_Responses) {}
    // Get Device Status
    //   
    //                           Get the device status. 0 = status ok/ 1 = malfunction.
    //   
    rpc GetDeviceStatus(sila2.org.silastandard.examples.deviceservicer.v1.GetDeviceStatus_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.GetDeviceStatus_Responses) {}
    // Get Device Status Diagnosis
    //   
    //                   Get the device status malfunction diagnosis. String of form XXXXXXX; 0=no malfunction,1=malfunction.
    //                   For X1 = Error, X2-X4 = unassigned, X5 = sublevel, X6-X7 = unassigned.
    //   
    rpc GetDeviceStatusDiagnosis(sila2.org.silastandard.examples.deviceservicer.v1.GetDeviceStatusDiagnosis_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.GetDeviceStatusDiagnosis_Responses) {}
    // Get Power Status
    //   Get power/standby mode. 0=On, 1=Off/Standby.
    rpc GetPowerStatus(sila2.org.silastandard.examples.deviceservicer.v1.GetPowerStatus_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.GetPowerStatus_Responses) {}
    // Current Status
    //   Get the current status of the device from the internal state machine of the SiLA server.
    rpc Subscribe_CurrentStatus(sila2.org.silastandard.examples.deviceservicer.v1.Subscribe_CurrentStatus_Parameters) returns (stream sila2.org.silastandard.examples.deviceservicer.v1.Subscribe_CurrentStatus_Responses) {}
    // Current Software Version
    //   Get thermostat software version. Response is string.
    rpc Get_CurrentSoftwareVersion(sila2.org.silastandard.examples.deviceservicer.v1.Get_CurrentSoftwareVersion_Parameters) returns (sila2.org.silastandard.examples.deviceservicer.v1.Get_CurrentSoftwareVersion_Responses) {}
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message GetLog_Parameters {
    
}

message GetLog_Responses {
    sila2.org.silastandard.Integer CurrentLogLevel = 1;
    sila2.org.silastandard.Timestamp CurrentLogTimestamp = 2;
    sila2.org.silastandard.String CurrentLogMessage = 3;
}

message SetKeyLockMode_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String KeyLockMode = 1;
}

message SetKeyLockMode_Responses {
    sila2.org.silastandard.String KeyLockModeSet = 1;
}

message GetKeyLockMode_Parameters {
    
}

message GetKeyLockMode_Responses {
    sila2.org.silastandard.String CurrentKeyLockMode = 1;
}

message StartThermostat_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String Start = 1;
}

message StartThermostat_Responses {
    sila2.org.silastandard.String StartStatus = 1;
}

message StopThermostat_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String Stop = 1;
}

message StopThermostat_Responses {
    sila2.org.silastandard.String StopStatus = 1;
}

message GetDeviceStatus_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String DeviceStatus = 1;
}

message GetDeviceStatus_Responses {
    sila2.org.silastandard.String CurrentDeviceStatus = 1;
}

message GetDeviceStatusDiagnosis_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String DeviceStatusDiagnosis = 1;
}

message GetDeviceStatusDiagnosis_Responses {
    sila2.org.silastandard.String CurrentDeviceStatusDiagnosis = 1;
}

message GetPowerStatus_Parameters {
    
}

message GetPowerStatus_Responses {
    sila2.org.silastandard.String CurrentPowerStatus = 1;
}
message Subscribe_CurrentStatus_Parameters {
    // Empty message
}

message Subscribe_CurrentStatus_Responses {
    sila2.org.silastandard.String CurrentStatus = 1;
}

message Get_CurrentSoftwareVersion_Parameters {
    // Empty message
}

message Get_CurrentSoftwareVersion_Responses {
    sila2.org.silastandard.String CurrentSoftwareVersion = 1;
}

// ----------------- Metadata Definitions ------------------
