# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import DeviceServicer_pb2 as DeviceServicer__pb2
import sila2lib.framework.SiLAFramework_pb2 as SiLAFramework__pb2


class DeviceServicerStub(object):
  """Feature: Device Servicer

  General device settings can be retrieved and changed within this function.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetLog = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetLog',
        request_serializer=DeviceServicer__pb2.GetLog_Parameters.SerializeToString,
        response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
        )
    self.GetLog_Info = channel.unary_stream(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetLog_Info',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
        )
    self.GetLog_Result = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetLog_Result',
        request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
        response_deserializer=DeviceServicer__pb2.GetLog_Responses.FromString,
        )
    self.SetKeyLockMode = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/SetKeyLockMode',
        request_serializer=DeviceServicer__pb2.SetKeyLockMode_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.SetKeyLockMode_Responses.FromString,
        )
    self.GetKeyLockMode = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetKeyLockMode',
        request_serializer=DeviceServicer__pb2.GetKeyLockMode_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.GetKeyLockMode_Responses.FromString,
        )
    self.StartThermostat = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/StartThermostat',
        request_serializer=DeviceServicer__pb2.StartThermostat_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.StartThermostat_Responses.FromString,
        )
    self.StopThermostat = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/StopThermostat',
        request_serializer=DeviceServicer__pb2.StopThermostat_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.StopThermostat_Responses.FromString,
        )
    self.GetDeviceStatus = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetDeviceStatus',
        request_serializer=DeviceServicer__pb2.GetDeviceStatus_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.GetDeviceStatus_Responses.FromString,
        )
    self.GetDeviceStatusDiagnosis = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetDeviceStatusDiagnosis',
        request_serializer=DeviceServicer__pb2.GetDeviceStatusDiagnosis_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.GetDeviceStatusDiagnosis_Responses.FromString,
        )
    self.GetPowerStatus = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/GetPowerStatus',
        request_serializer=DeviceServicer__pb2.GetPowerStatus_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.GetPowerStatus_Responses.FromString,
        )
    self.Subscribe_CurrentStatus = channel.unary_stream(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/Subscribe_CurrentStatus',
        request_serializer=DeviceServicer__pb2.Subscribe_CurrentStatus_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.Subscribe_CurrentStatus_Responses.FromString,
        )
    self.Get_CurrentSoftwareVersion = channel.unary_unary(
        '/sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer/Get_CurrentSoftwareVersion',
        request_serializer=DeviceServicer__pb2.Get_CurrentSoftwareVersion_Parameters.SerializeToString,
        response_deserializer=DeviceServicer__pb2.Get_CurrentSoftwareVersion_Responses.FromString,
        )


class DeviceServicerServicer(object):
  """Feature: Device Servicer

  General device settings can be retrieved and changed within this function.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def GetLog(self, request, context):
    """Get Log
    Get the current status of the device from the state machine of the SiLA server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLog_Info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLog_Result(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetKeyLockMode(self, request, context):
    """Set Key Lock Mode

    Set the lock mode of the keyboard lock.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetKeyLockMode(self, request, context):
    """Get Key Lock MOde
    Get mode of the keyboard lock feature. 0=unlocked, 1=locked.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartThermostat(self, request, context):
    """Start The Thermostat

    Starts the thermostat out of stand-by mode.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopThermostat(self, request, context):
    """Stop Thermostat

    Stops the thermostat and puts it into stand-by mode.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDeviceStatus(self, request, context):
    """Get Device Status

    Get the device status. 0 = status ok/ 1 = malfunction.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDeviceStatusDiagnosis(self, request, context):
    """Get Device Status Diagnosis

    Get the device status malfunction diagnosis. String of form XXXXXXX; 0=no malfunction,1=malfunction.
    For X1 = Error, X2-X4 = unassigned, X5 = sublevel, X6-X7 = unassigned.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPowerStatus(self, request, context):
    """Get Power Status
    Get power/standby mode. 0=On, 1=Off/Standby.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe_CurrentStatus(self, request, context):
    """Current Status
    Get the current status of the device from the internal state machine of the SiLA server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_CurrentSoftwareVersion(self, request, context):
    """Current Software Version
    Get thermostat software version. Response is string.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeviceServicerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetLog': grpc.unary_unary_rpc_method_handler(
          servicer.GetLog,
          request_deserializer=DeviceServicer__pb2.GetLog_Parameters.FromString,
          response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
      ),
      'GetLog_Info': grpc.unary_stream_rpc_method_handler(
          servicer.GetLog_Info,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
      ),
      'GetLog_Result': grpc.unary_unary_rpc_method_handler(
          servicer.GetLog_Result,
          request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
          response_serializer=DeviceServicer__pb2.GetLog_Responses.SerializeToString,
      ),
      'SetKeyLockMode': grpc.unary_unary_rpc_method_handler(
          servicer.SetKeyLockMode,
          request_deserializer=DeviceServicer__pb2.SetKeyLockMode_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.SetKeyLockMode_Responses.SerializeToString,
      ),
      'GetKeyLockMode': grpc.unary_unary_rpc_method_handler(
          servicer.GetKeyLockMode,
          request_deserializer=DeviceServicer__pb2.GetKeyLockMode_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.GetKeyLockMode_Responses.SerializeToString,
      ),
      'StartThermostat': grpc.unary_unary_rpc_method_handler(
          servicer.StartThermostat,
          request_deserializer=DeviceServicer__pb2.StartThermostat_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.StartThermostat_Responses.SerializeToString,
      ),
      'StopThermostat': grpc.unary_unary_rpc_method_handler(
          servicer.StopThermostat,
          request_deserializer=DeviceServicer__pb2.StopThermostat_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.StopThermostat_Responses.SerializeToString,
      ),
      'GetDeviceStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetDeviceStatus,
          request_deserializer=DeviceServicer__pb2.GetDeviceStatus_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.GetDeviceStatus_Responses.SerializeToString,
      ),
      'GetDeviceStatusDiagnosis': grpc.unary_unary_rpc_method_handler(
          servicer.GetDeviceStatusDiagnosis,
          request_deserializer=DeviceServicer__pb2.GetDeviceStatusDiagnosis_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.GetDeviceStatusDiagnosis_Responses.SerializeToString,
      ),
      'GetPowerStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetPowerStatus,
          request_deserializer=DeviceServicer__pb2.GetPowerStatus_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.GetPowerStatus_Responses.SerializeToString,
      ),
      'Subscribe_CurrentStatus': grpc.unary_stream_rpc_method_handler(
          servicer.Subscribe_CurrentStatus,
          request_deserializer=DeviceServicer__pb2.Subscribe_CurrentStatus_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.Subscribe_CurrentStatus_Responses.SerializeToString,
      ),
      'Get_CurrentSoftwareVersion': grpc.unary_unary_rpc_method_handler(
          servicer.Get_CurrentSoftwareVersion,
          request_deserializer=DeviceServicer__pb2.Get_CurrentSoftwareVersion_Parameters.FromString,
          response_serializer=DeviceServicer__pb2.Get_CurrentSoftwareVersion_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.org.silastandard.examples.deviceservicer.v1.DeviceServicer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
