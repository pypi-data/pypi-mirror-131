# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import DriveControlServicer_pb2 as DriveControlServicer__pb2


class DriveControlServicerStub(object):
    """Feature: Drive Control Servicer

    Set and retrieve information regarding the pump drive of the Reglo DC (digital control) pump..
    Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.03.2021.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartPump = channel.unary_unary(
                '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/StartPump',
                request_serializer=DriveControlServicer__pb2.StartPump_Parameters.SerializeToString,
                response_deserializer=DriveControlServicer__pb2.StartPump_Responses.FromString,
                )
        self.StopPump = channel.unary_unary(
                '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/StopPump',
                request_serializer=DriveControlServicer__pb2.StopPump_Parameters.SerializeToString,
                response_deserializer=DriveControlServicer__pb2.StopPump_Responses.FromString,
                )
        self.GetPumpDirection = channel.unary_unary(
                '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/GetPumpDirection',
                request_serializer=DriveControlServicer__pb2.GetPumpDirection_Parameters.SerializeToString,
                response_deserializer=DriveControlServicer__pb2.GetPumpDirection_Responses.FromString,
                )
        self.SetDirectionClockwise = channel.unary_unary(
                '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/SetDirectionClockwise',
                request_serializer=DriveControlServicer__pb2.SetDirectionClockwise_Parameters.SerializeToString,
                response_deserializer=DriveControlServicer__pb2.SetDirectionClockwise_Responses.FromString,
                )
        self.SetDirectionCounterClockwise = channel.unary_unary(
                '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/SetDirectionCounterClockwise',
                request_serializer=DriveControlServicer__pb2.SetDirectionCounterClockwise_Parameters.SerializeToString,
                response_deserializer=DriveControlServicer__pb2.SetDirectionCounterClockwise_Responses.FromString,
                )


class DriveControlServicerServicer(object):
    """Feature: Drive Control Servicer

    Set and retrieve information regarding the pump drive of the Reglo DC (digital control) pump..
    Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.03.2021.

    """

    def StartPump(self, request, context):
        """Start Pump

        Starts the pump out of stand-by mode.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopPump(self, request, context):
        """Stop Pump

        Stops the all channels of the pump.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPumpDirection(self, request, context):
        """Get Pump Direction
        Get pump direction.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDirectionClockwise(self, request, context):
        """Set Direction to clockwise
        Set the rotation direction of the pump to clockwise
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDirectionCounterClockwise(self, request, context):
        """Set Direction to Counter-Clockwise
        Set the rotation direction of the pump to counter-clockwise
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DriveControlServicerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartPump': grpc.unary_unary_rpc_method_handler(
                    servicer.StartPump,
                    request_deserializer=DriveControlServicer__pb2.StartPump_Parameters.FromString,
                    response_serializer=DriveControlServicer__pb2.StartPump_Responses.SerializeToString,
            ),
            'StopPump': grpc.unary_unary_rpc_method_handler(
                    servicer.StopPump,
                    request_deserializer=DriveControlServicer__pb2.StopPump_Parameters.FromString,
                    response_serializer=DriveControlServicer__pb2.StopPump_Responses.SerializeToString,
            ),
            'GetPumpDirection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPumpDirection,
                    request_deserializer=DriveControlServicer__pb2.GetPumpDirection_Parameters.FromString,
                    response_serializer=DriveControlServicer__pb2.GetPumpDirection_Responses.SerializeToString,
            ),
            'SetDirectionClockwise': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDirectionClockwise,
                    request_deserializer=DriveControlServicer__pb2.SetDirectionClockwise_Parameters.FromString,
                    response_serializer=DriveControlServicer__pb2.SetDirectionClockwise_Responses.SerializeToString,
            ),
            'SetDirectionCounterClockwise': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDirectionCounterClockwise,
                    request_deserializer=DriveControlServicer__pb2.SetDirectionCounterClockwise_Parameters.FromString,
                    response_serializer=DriveControlServicer__pb2.SetDirectionCounterClockwise_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DriveControlServicer(object):
    """Feature: Drive Control Servicer

    Set and retrieve information regarding the pump drive of the Reglo DC (digital control) pump..
    Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.03.2021.

    """

    @staticmethod
    def StartPump(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/StartPump',
            DriveControlServicer__pb2.StartPump_Parameters.SerializeToString,
            DriveControlServicer__pb2.StartPump_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopPump(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/StopPump',
            DriveControlServicer__pb2.StopPump_Parameters.SerializeToString,
            DriveControlServicer__pb2.StopPump_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPumpDirection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/GetPumpDirection',
            DriveControlServicer__pb2.GetPumpDirection_Parameters.SerializeToString,
            DriveControlServicer__pb2.GetPumpDirection_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDirectionClockwise(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/SetDirectionClockwise',
            DriveControlServicer__pb2.SetDirectionClockwise_Parameters.SerializeToString,
            DriveControlServicer__pb2.SetDirectionClockwise_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDirectionCounterClockwise(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.drivecontrolservicer.v1.DriveControlServicer/SetDirectionCounterClockwise',
            DriveControlServicer__pb2.SetDirectionCounterClockwise_Parameters.SerializeToString,
            DriveControlServicer__pb2.SetDirectionCounterClockwise_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
