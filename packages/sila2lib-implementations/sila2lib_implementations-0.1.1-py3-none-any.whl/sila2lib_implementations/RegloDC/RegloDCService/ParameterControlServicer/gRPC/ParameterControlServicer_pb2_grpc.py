# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ParameterControlServicer_pb2 as ParameterControlServicer__pb2


class ParameterControlServicerStub(object):
    """Feature: Parameter Control Servicer

    Set and retrieve information regarding the parameter settings of the Reglo DC (digital control) pump.
    Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.03.2021.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetRPMMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRPMMode',
                request_serializer=ParameterControlServicer__pb2.SetRPMMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetRPMMode_Responses.FromString,
                )
        self.SetFlowRateMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetFlowRateMode',
                request_serializer=ParameterControlServicer__pb2.SetFlowRateMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetFlowRateMode_Responses.FromString,
                )
        self.SetDispenseVolumeMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolumeMode',
                request_serializer=ParameterControlServicer__pb2.SetDispenseVolumeMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseVolumeMode_Responses.FromString,
                )
        self.SetDispenseTimeMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseTimeMode',
                request_serializer=ParameterControlServicer__pb2.SetDispenseTimeMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseTimeMode_Responses.FromString,
                )
        self.SetPauseTimeMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetPauseTimeMode',
                request_serializer=ParameterControlServicer__pb2.SetPauseTimeMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetPauseTimeMode_Responses.FromString,
                )
        self.SetDispenseTimePauseTimeMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseTimePauseTimeMode',
                request_serializer=ParameterControlServicer__pb2.SetDispenseTimePauseTimeMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseTimePauseTimeMode_Responses.FromString,
                )
        self.SetDispenseVolumePauseTimeMode = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolumePauseTimeMode',
                request_serializer=ParameterControlServicer__pb2.SetDispenseVolumePauseTimeMode_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseVolumePauseTimeMode_Responses.FromString,
                )
        self.GetDispenseVolume = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetDispenseVolume',
                request_serializer=ParameterControlServicer__pb2.GetDispenseVolume_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetDispenseVolume_Responses.FromString,
                )
        self.SetDispenseVolume = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolume',
                request_serializer=ParameterControlServicer__pb2.SetDispenseVolume_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseVolume_Responses.FromString,
                )
        self.SetDispenseVolumeModeVolume = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolumeModeVolume',
                request_serializer=ParameterControlServicer__pb2.SetDispenseVolumeModeVolume_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseVolumeModeVolume_Responses.FromString,
                )
        self.GetFlowRate = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetFlowRate',
                request_serializer=ParameterControlServicer__pb2.GetFlowRate_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetFlowRate_Responses.FromString,
                )
        self.SetFlowRate = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetFlowRate',
                request_serializer=ParameterControlServicer__pb2.SetFlowRate_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetFlowRate_Responses.FromString,
                )
        self.GetRPM = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRPM',
                request_serializer=ParameterControlServicer__pb2.GetRPM_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetRPM_Responses.FromString,
                )
        self.SetRPM = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRPM',
                request_serializer=ParameterControlServicer__pb2.SetRPM_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetRPM_Responses.FromString,
                )
        self.GetPauseTime = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetPauseTime',
                request_serializer=ParameterControlServicer__pb2.GetPauseTime_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetPauseTime_Responses.FromString,
                )
        self.SetPauseTime = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetPauseTime',
                request_serializer=ParameterControlServicer__pb2.SetPauseTime_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetPauseTime_Responses.FromString,
                )
        self.GetDispenseCycles = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetDispenseCycles',
                request_serializer=ParameterControlServicer__pb2.GetDispenseCycles_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetDispenseCycles_Responses.FromString,
                )
        self.SetDispenseCycles = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseCycles',
                request_serializer=ParameterControlServicer__pb2.SetDispenseCycles_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseCycles_Responses.FromString,
                )
        self.GetDispenseTime = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetDispenseTime',
                request_serializer=ParameterControlServicer__pb2.GetDispenseTime_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetDispenseTime_Responses.FromString,
                )
        self.SetDispenseTime = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseTime',
                request_serializer=ParameterControlServicer__pb2.SetDispenseTime_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetDispenseTime_Responses.FromString,
                )
        self.GetRollerSteps = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRollerSteps',
                request_serializer=ParameterControlServicer__pb2.GetRollerSteps_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetRollerSteps_Responses.FromString,
                )
        self.SetRollerSteps = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRollerSteps',
                request_serializer=ParameterControlServicer__pb2.SetRollerSteps_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetRollerSteps_Responses.FromString,
                )
        self.GetRollerStepVolume = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRollerStepVolume',
                request_serializer=ParameterControlServicer__pb2.GetRollerStepVolume_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetRollerStepVolume_Responses.FromString,
                )
        self.SetRollerStepVolume = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRollerStepVolume',
                request_serializer=ParameterControlServicer__pb2.SetRollerStepVolume_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetRollerStepVolume_Responses.FromString,
                )
        self.ResetRollerStepVolume = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/ResetRollerStepVolume',
                request_serializer=ParameterControlServicer__pb2.ResetRollerStepVolume_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.ResetRollerStepVolume_Responses.FromString,
                )
        self.GetRollerBackSteps = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRollerBackSteps',
                request_serializer=ParameterControlServicer__pb2.GetRollerBackSteps_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetRollerBackSteps_Responses.FromString,
                )
        self.SetRollerBackSteps = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRollerBackSteps',
                request_serializer=ParameterControlServicer__pb2.SetRollerBackSteps_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetRollerBackSteps_Responses.FromString,
                )
        self.SaveApplicationParameters = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SaveApplicationParameters',
                request_serializer=ParameterControlServicer__pb2.SaveApplicationParameters_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SaveApplicationParameters_Responses.FromString,
                )
        self.GetTubingDiameter = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetTubingDiameter',
                request_serializer=ParameterControlServicer__pb2.GetTubingDiameter_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.GetTubingDiameter_Responses.FromString,
                )
        self.SetTubingDiameter = channel.unary_unary(
                '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetTubingDiameter',
                request_serializer=ParameterControlServicer__pb2.SetTubingDiameter_Parameters.SerializeToString,
                response_deserializer=ParameterControlServicer__pb2.SetTubingDiameter_Responses.FromString,
                )


class ParameterControlServicerServicer(object):
    """Feature: Parameter Control Servicer

    Set and retrieve information regarding the parameter settings of the Reglo DC (digital control) pump.
    Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.03.2021.

    """

    def SetRPMMode(self, request, context):
        """Set RPM Mode

        Set the pump mode to RPM mode (MODE PUMP% rpm).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFlowRateMode(self, request, context):
        """Set Flow Rate Mode

        Set the pump mode to Flow Rate mode (MODE PUMP% Flow rate).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseVolumeMode(self, request, context):
        """Set Dispense Volume Mode

        Set the pump mode to dispense volume mode (MODE DISP Volume).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseTimeMode(self, request, context):
        """Set Dispense Time Mode

        Set the pump mode to dispense time mode (MODE DISP Time).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPauseTimeMode(self, request, context):
        """Set Pause Time Mode

        Set the current pump mode to pause-time mode (MODE PAUSE Time).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseTimePauseTimeMode(self, request, context):
        """Set Time Mode

        Set the pump mode to dispense time/ pause time mode (DISP Time + PAUSE Time).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseVolumePauseTimeMode(self, request, context):
        """Set Dispense Volume Pause Time Mode

        Set the pump mode to dispense volume/ pause time mode (DISP Volume + PAUSE Time).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDispenseVolume(self, request, context):
        """Get Dispense Volume
        Get the current setting for the dispensing volume in mL/min.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseVolume(self, request, context):
        """Set Dispense Volume

        Set the dispensing volume in mL.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseVolumeModeVolume(self, request, context):
        """Set Dispense Volume Mode Volume

        Set the dispensing volume for the mode DISP Volume in mL (The entered dispensing volume is rounded down to
        complete roller steps).

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlowRate(self, request, context):
        """Get Flow Rate
        Get current flow rate (mL/min).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFlowRate(self, request, context):
        """Set Flow Rate
        Set current flow rate (mL/min).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRPM(self, request, context):
        """Get RPM
        Get current rpm.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRPM(self, request, context):
        """Set RPM
        Set pump speed in rpm (100 - 10000 (4 channel type); 160 - 16000 (2 channel type)).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPauseTime(self, request, context):
        """Get Pause Time
        Get pause time in s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPauseTime(self, request, context):
        """Set Pause Time
        Set pause time in s, min, and h.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDispenseCycles(self, request, context):
        """Get Dispense Cycle
        Get number of dispense cycles.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseCycles(self, request, context):
        """Set Dispense Cycles
        Set number of dispensing cycles (integer).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDispenseTime(self, request, context):
        """Get Dispense Time
        Get the time to dispense in s.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenseTime(self, request, context):
        """Set Dispense Time
        Set the time to dispense in s, min, and h.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRollerSteps(self, request, context):
        """Get Roller Steps
        Get roller steps for mode DISP Volume.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRollerSteps(self, request, context):
        """Set Roller Steps
        Set the roller steps for mode DISP Volume.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRollerStepVolume(self, request, context):
        """Get Roller Step Volume
        Get roller step volume in nano-liters (nL).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRollerStepVolume(self, request, context):
        """Set Roller Step Volume
        Set the roller step volume in nano-liters (nL).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetRollerStepVolume(self, request, context):
        """Reset Roller Step Volume
        Reset the roller step volume back to default.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRollerBackSteps(self, request, context):
        """Get Roller Back Steps
        Get roller back-steps (0 - 100).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRollerBackSteps(self, request, context):
        """Set Roller Back Steps
        Set the roller back-steps (1 - 100).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveApplicationParameters(self, request, context):
        """Save Application Parameters
        Save changes made to the application parameters in this feature.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTubingDiameter(self, request, context):
        """Get Tubing Diameter
        Get the inside diameter of the tubing in mm.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTubingDiameter(self, request, context):
        """Set Tubing Inside Diameter Value

        Set the inside diameter of the tubing in mm.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ParameterControlServicerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetRPMMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRPMMode,
                    request_deserializer=ParameterControlServicer__pb2.SetRPMMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetRPMMode_Responses.SerializeToString,
            ),
            'SetFlowRateMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFlowRateMode,
                    request_deserializer=ParameterControlServicer__pb2.SetFlowRateMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetFlowRateMode_Responses.SerializeToString,
            ),
            'SetDispenseVolumeMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseVolumeMode,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseVolumeMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseVolumeMode_Responses.SerializeToString,
            ),
            'SetDispenseTimeMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseTimeMode,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseTimeMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseTimeMode_Responses.SerializeToString,
            ),
            'SetPauseTimeMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPauseTimeMode,
                    request_deserializer=ParameterControlServicer__pb2.SetPauseTimeMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetPauseTimeMode_Responses.SerializeToString,
            ),
            'SetDispenseTimePauseTimeMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseTimePauseTimeMode,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseTimePauseTimeMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseTimePauseTimeMode_Responses.SerializeToString,
            ),
            'SetDispenseVolumePauseTimeMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseVolumePauseTimeMode,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseVolumePauseTimeMode_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseVolumePauseTimeMode_Responses.SerializeToString,
            ),
            'GetDispenseVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDispenseVolume,
                    request_deserializer=ParameterControlServicer__pb2.GetDispenseVolume_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetDispenseVolume_Responses.SerializeToString,
            ),
            'SetDispenseVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseVolume,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseVolume_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseVolume_Responses.SerializeToString,
            ),
            'SetDispenseVolumeModeVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseVolumeModeVolume,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseVolumeModeVolume_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseVolumeModeVolume_Responses.SerializeToString,
            ),
            'GetFlowRate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlowRate,
                    request_deserializer=ParameterControlServicer__pb2.GetFlowRate_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetFlowRate_Responses.SerializeToString,
            ),
            'SetFlowRate': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFlowRate,
                    request_deserializer=ParameterControlServicer__pb2.SetFlowRate_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetFlowRate_Responses.SerializeToString,
            ),
            'GetRPM': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRPM,
                    request_deserializer=ParameterControlServicer__pb2.GetRPM_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetRPM_Responses.SerializeToString,
            ),
            'SetRPM': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRPM,
                    request_deserializer=ParameterControlServicer__pb2.SetRPM_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetRPM_Responses.SerializeToString,
            ),
            'GetPauseTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPauseTime,
                    request_deserializer=ParameterControlServicer__pb2.GetPauseTime_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetPauseTime_Responses.SerializeToString,
            ),
            'SetPauseTime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPauseTime,
                    request_deserializer=ParameterControlServicer__pb2.SetPauseTime_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetPauseTime_Responses.SerializeToString,
            ),
            'GetDispenseCycles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDispenseCycles,
                    request_deserializer=ParameterControlServicer__pb2.GetDispenseCycles_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetDispenseCycles_Responses.SerializeToString,
            ),
            'SetDispenseCycles': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseCycles,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseCycles_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseCycles_Responses.SerializeToString,
            ),
            'GetDispenseTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDispenseTime,
                    request_deserializer=ParameterControlServicer__pb2.GetDispenseTime_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetDispenseTime_Responses.SerializeToString,
            ),
            'SetDispenseTime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenseTime,
                    request_deserializer=ParameterControlServicer__pb2.SetDispenseTime_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetDispenseTime_Responses.SerializeToString,
            ),
            'GetRollerSteps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRollerSteps,
                    request_deserializer=ParameterControlServicer__pb2.GetRollerSteps_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetRollerSteps_Responses.SerializeToString,
            ),
            'SetRollerSteps': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRollerSteps,
                    request_deserializer=ParameterControlServicer__pb2.SetRollerSteps_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetRollerSteps_Responses.SerializeToString,
            ),
            'GetRollerStepVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRollerStepVolume,
                    request_deserializer=ParameterControlServicer__pb2.GetRollerStepVolume_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetRollerStepVolume_Responses.SerializeToString,
            ),
            'SetRollerStepVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRollerStepVolume,
                    request_deserializer=ParameterControlServicer__pb2.SetRollerStepVolume_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetRollerStepVolume_Responses.SerializeToString,
            ),
            'ResetRollerStepVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetRollerStepVolume,
                    request_deserializer=ParameterControlServicer__pb2.ResetRollerStepVolume_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.ResetRollerStepVolume_Responses.SerializeToString,
            ),
            'GetRollerBackSteps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRollerBackSteps,
                    request_deserializer=ParameterControlServicer__pb2.GetRollerBackSteps_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetRollerBackSteps_Responses.SerializeToString,
            ),
            'SetRollerBackSteps': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRollerBackSteps,
                    request_deserializer=ParameterControlServicer__pb2.SetRollerBackSteps_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetRollerBackSteps_Responses.SerializeToString,
            ),
            'SaveApplicationParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveApplicationParameters,
                    request_deserializer=ParameterControlServicer__pb2.SaveApplicationParameters_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SaveApplicationParameters_Responses.SerializeToString,
            ),
            'GetTubingDiameter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTubingDiameter,
                    request_deserializer=ParameterControlServicer__pb2.GetTubingDiameter_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.GetTubingDiameter_Responses.SerializeToString,
            ),
            'SetTubingDiameter': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTubingDiameter,
                    request_deserializer=ParameterControlServicer__pb2.SetTubingDiameter_Parameters.FromString,
                    response_serializer=ParameterControlServicer__pb2.SetTubingDiameter_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ParameterControlServicer(object):
    """Feature: Parameter Control Servicer

    Set and retrieve information regarding the parameter settings of the Reglo DC (digital control) pump.
    Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.03.2021.

    """

    @staticmethod
    def SetRPMMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRPMMode',
            ParameterControlServicer__pb2.SetRPMMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetRPMMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFlowRateMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetFlowRateMode',
            ParameterControlServicer__pb2.SetFlowRateMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetFlowRateMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseVolumeMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolumeMode',
            ParameterControlServicer__pb2.SetDispenseVolumeMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseVolumeMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseTimeMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseTimeMode',
            ParameterControlServicer__pb2.SetDispenseTimeMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseTimeMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPauseTimeMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetPauseTimeMode',
            ParameterControlServicer__pb2.SetPauseTimeMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetPauseTimeMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseTimePauseTimeMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseTimePauseTimeMode',
            ParameterControlServicer__pb2.SetDispenseTimePauseTimeMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseTimePauseTimeMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseVolumePauseTimeMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolumePauseTimeMode',
            ParameterControlServicer__pb2.SetDispenseVolumePauseTimeMode_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseVolumePauseTimeMode_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDispenseVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetDispenseVolume',
            ParameterControlServicer__pb2.GetDispenseVolume_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetDispenseVolume_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolume',
            ParameterControlServicer__pb2.SetDispenseVolume_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseVolume_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseVolumeModeVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseVolumeModeVolume',
            ParameterControlServicer__pb2.SetDispenseVolumeModeVolume_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseVolumeModeVolume_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlowRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetFlowRate',
            ParameterControlServicer__pb2.GetFlowRate_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetFlowRate_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFlowRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetFlowRate',
            ParameterControlServicer__pb2.SetFlowRate_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetFlowRate_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRPM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRPM',
            ParameterControlServicer__pb2.GetRPM_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetRPM_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRPM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRPM',
            ParameterControlServicer__pb2.SetRPM_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetRPM_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPauseTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetPauseTime',
            ParameterControlServicer__pb2.GetPauseTime_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetPauseTime_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPauseTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetPauseTime',
            ParameterControlServicer__pb2.SetPauseTime_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetPauseTime_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDispenseCycles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetDispenseCycles',
            ParameterControlServicer__pb2.GetDispenseCycles_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetDispenseCycles_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseCycles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseCycles',
            ParameterControlServicer__pb2.SetDispenseCycles_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseCycles_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDispenseTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetDispenseTime',
            ParameterControlServicer__pb2.GetDispenseTime_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetDispenseTime_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenseTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetDispenseTime',
            ParameterControlServicer__pb2.SetDispenseTime_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetDispenseTime_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRollerSteps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRollerSteps',
            ParameterControlServicer__pb2.GetRollerSteps_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetRollerSteps_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRollerSteps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRollerSteps',
            ParameterControlServicer__pb2.SetRollerSteps_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetRollerSteps_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRollerStepVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRollerStepVolume',
            ParameterControlServicer__pb2.GetRollerStepVolume_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetRollerStepVolume_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRollerStepVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRollerStepVolume',
            ParameterControlServicer__pb2.SetRollerStepVolume_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetRollerStepVolume_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetRollerStepVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/ResetRollerStepVolume',
            ParameterControlServicer__pb2.ResetRollerStepVolume_Parameters.SerializeToString,
            ParameterControlServicer__pb2.ResetRollerStepVolume_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRollerBackSteps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetRollerBackSteps',
            ParameterControlServicer__pb2.GetRollerBackSteps_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetRollerBackSteps_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRollerBackSteps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetRollerBackSteps',
            ParameterControlServicer__pb2.SetRollerBackSteps_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetRollerBackSteps_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveApplicationParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SaveApplicationParameters',
            ParameterControlServicer__pb2.SaveApplicationParameters_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SaveApplicationParameters_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTubingDiameter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/GetTubingDiameter',
            ParameterControlServicer__pb2.GetTubingDiameter_Parameters.SerializeToString,
            ParameterControlServicer__pb2.GetTubingDiameter_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTubingDiameter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.parametercontrolservicer.v1.ParameterControlServicer/SetTubingDiameter',
            ParameterControlServicer__pb2.SetTubingDiameter_Parameters.SerializeToString,
            ParameterControlServicer__pb2.SetTubingDiameter_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
