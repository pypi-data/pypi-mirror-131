# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ConfigurationServicer_pb2 as ConfigurationServicer__pb2


class ConfigurationServicerStub(object):
  """Feature: Configuration Servicer

  Set and retrieve the control parameter values for the configuration of the Reglo ICC pump.
  By Valeryia Sidarava, Institute of Biochemical Engineering, Technical University of Munich, 31.07.2019,
  Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.04.2020.

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetTubingDiameter = channel.unary_unary(
        '/sila2.org.silastandard.examples.configurationservicer.v1.ConfigurationServicer/SetTubingDiameter',
        request_serializer=ConfigurationServicer__pb2.SetTubingDiameter_Parameters.SerializeToString,
        response_deserializer=ConfigurationServicer__pb2.SetTubingDiameter_Responses.FromString,
        )
    self.ResetToDefault = channel.unary_unary(
        '/sila2.org.silastandard.examples.configurationservicer.v1.ConfigurationServicer/ResetToDefault',
        request_serializer=ConfigurationServicer__pb2.ResetToDefault_Parameters.SerializeToString,
        response_deserializer=ConfigurationServicer__pb2.ResetToDefault_Responses.FromString,
        )
    self.GetTubingDiameter = channel.unary_unary(
        '/sila2.org.silastandard.examples.configurationservicer.v1.ConfigurationServicer/GetTubingDiameter',
        request_serializer=ConfigurationServicer__pb2.GetTubingDiameter_Parameters.SerializeToString,
        response_deserializer=ConfigurationServicer__pb2.GetTubingDiameter_Responses.FromString,
        )
    self.SetBacksteps = channel.unary_unary(
        '/sila2.org.silastandard.examples.configurationservicer.v1.ConfigurationServicer/SetBacksteps',
        request_serializer=ConfigurationServicer__pb2.SetBacksteps_Parameters.SerializeToString,
        response_deserializer=ConfigurationServicer__pb2.SetBacksteps_Responses.FromString,
        )
    self.GetBacksteps = channel.unary_unary(
        '/sila2.org.silastandard.examples.configurationservicer.v1.ConfigurationServicer/GetBacksteps',
        request_serializer=ConfigurationServicer__pb2.GetBacksteps_Parameters.SerializeToString,
        response_deserializer=ConfigurationServicer__pb2.GetBacksteps_Responses.FromString,
        )


class ConfigurationServicerServicer(object):
  """Feature: Configuration Servicer

  Set and retrieve the control parameter values for the configuration of the Reglo ICC pump.
  By Valeryia Sidarava, Institute of Biochemical Engineering, Technical University of Munich, 31.07.2019,
  Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 15.04.2020.

  """

  def SetTubingDiameter(self, request, context):
    """Set Tubing Inside Diameter Value

    Set the inside diameter of the tubing in mm.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetToDefault(self, request, context):
    """Reset To Default

    Resets all user configurable data to default values.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTubingDiameter(self, request, context):
    """Get Tubing Diameter
    Get the inside diameter of the tubing in mm.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetBacksteps(self, request, context):
    """Set Backsteps setting

    Set the current backsteps setting using Discrete Type 2.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBacksteps(self, request, context):
    """Get Backsteps setting

    Get the current backsteps setting.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ConfigurationServicerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetTubingDiameter': grpc.unary_unary_rpc_method_handler(
          servicer.SetTubingDiameter,
          request_deserializer=ConfigurationServicer__pb2.SetTubingDiameter_Parameters.FromString,
          response_serializer=ConfigurationServicer__pb2.SetTubingDiameter_Responses.SerializeToString,
      ),
      'ResetToDefault': grpc.unary_unary_rpc_method_handler(
          servicer.ResetToDefault,
          request_deserializer=ConfigurationServicer__pb2.ResetToDefault_Parameters.FromString,
          response_serializer=ConfigurationServicer__pb2.ResetToDefault_Responses.SerializeToString,
      ),
      'GetTubingDiameter': grpc.unary_unary_rpc_method_handler(
          servicer.GetTubingDiameter,
          request_deserializer=ConfigurationServicer__pb2.GetTubingDiameter_Parameters.FromString,
          response_serializer=ConfigurationServicer__pb2.GetTubingDiameter_Responses.SerializeToString,
      ),
      'SetBacksteps': grpc.unary_unary_rpc_method_handler(
          servicer.SetBacksteps,
          request_deserializer=ConfigurationServicer__pb2.SetBacksteps_Parameters.FromString,
          response_serializer=ConfigurationServicer__pb2.SetBacksteps_Responses.SerializeToString,
      ),
      'GetBacksteps': grpc.unary_unary_rpc_method_handler(
          servicer.GetBacksteps,
          request_deserializer=ConfigurationServicer__pb2.GetBacksteps_Parameters.FromString,
          response_serializer=ConfigurationServicer__pb2.GetBacksteps_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.org.silastandard.examples.configurationservicer.v1.ConfigurationServicer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
