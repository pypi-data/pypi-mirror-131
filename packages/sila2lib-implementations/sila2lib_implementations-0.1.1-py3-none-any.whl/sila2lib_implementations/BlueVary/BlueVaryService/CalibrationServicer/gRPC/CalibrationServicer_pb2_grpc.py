# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import CalibrationServicer_pb2 as CalibrationServicer__pb2


class CalibrationServicerStub(object):
  """Feature: Calibration Servicer

  Used to initiate device 1-pt calibration of the off-gas sensors.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartCalibration = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.calibrationservicer.v1.CalibrationServicer/StartCalibration',
        request_serializer=CalibrationServicer__pb2.StartCalibration_Parameters.SerializeToString,
        response_deserializer=CalibrationServicer__pb2.StartCalibration_Responses.FromString,
        )


class CalibrationServicerServicer(object):
  """Feature: Calibration Servicer

  Used to initiate device 1-pt calibration of the off-gas sensors.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def StartCalibration(self, request, context):
    """Start Calibration
    Start the 1-pt calibration of the sensors
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalibrationServicerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartCalibration': grpc.unary_unary_rpc_method_handler(
          servicer.StartCalibration,
          request_deserializer=CalibrationServicer__pb2.StartCalibration_Parameters.FromString,
          response_serializer=CalibrationServicer__pb2.StartCalibration_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.biovt.mw.tum.de.examples.calibrationservicer.v1.CalibrationServicer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
