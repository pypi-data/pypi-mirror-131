# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import FluidDefinitionService_pb2 as FluidDefinitionService__pb2


class FluidDefinitionServiceStub(object):
    """Feature: Fluid Definition Service

    Allows full set of the fluid properties as well as the current information of the working fluid.
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    02.12.2020

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFluidSetProperties = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetFluidSetProperties',
                request_serializer=FluidDefinitionService__pb2.GetFluidSetProperties_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.GetFluidSetProperties_Responses.FromString,
                )
        self.SetFluidsetProperties = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetFluidsetProperties',
                request_serializer=FluidDefinitionService__pb2.SetFluidsetProperties_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.SetFluidsetProperties_Responses.FromString,
                )
        self.GetFluidNumber = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetFluidNumber',
                request_serializer=FluidDefinitionService__pb2.GetFluidNumber_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.GetFluidNumber_Responses.FromString,
                )
        self.SetFluidNumber = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetFluidNumber',
                request_serializer=FluidDefinitionService__pb2.SetFluidNumber_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.SetFluidNumber_Responses.FromString,
                )
        self.GetFluidName = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetFluidName',
                request_serializer=FluidDefinitionService__pb2.GetFluidName_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.GetFluidName_Responses.FromString,
                )
        self.SetFluidName = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetFluidName',
                request_serializer=FluidDefinitionService__pb2.SetFluidName_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.SetFluidName_Responses.FromString,
                )
        self.GetHeatCapacity = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetHeatCapacity',
                request_serializer=FluidDefinitionService__pb2.GetHeatCapacity_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.GetHeatCapacity_Responses.FromString,
                )
        self.SetHeatCapacity = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetHeatCapacity',
                request_serializer=FluidDefinitionService__pb2.SetHeatCapacity_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.SetHeatCapacity_Responses.FromString,
                )
        self.GetViscosity = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetViscosity',
                request_serializer=FluidDefinitionService__pb2.GetViscosity_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.GetViscosity_Responses.FromString,
                )
        self.SetViscosity = channel.unary_unary(
                '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetViscosity',
                request_serializer=FluidDefinitionService__pb2.SetViscosity_Parameters.SerializeToString,
                response_deserializer=FluidDefinitionService__pb2.SetViscosity_Responses.FromString,
                )


class FluidDefinitionServiceServicer(object):
    """Feature: Fluid Definition Service

    Allows full set of the fluid properties as well as the current information of the working fluid.
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    02.12.2020

    """

    def GetFluidSetProperties(self, request, context):
        """Get Fluidset properties
        The current fluidset properties for the calculations performed by the program
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFluidsetProperties(self, request, context):
        """Set fluid properties
        The fluidset properties to work with
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFluidNumber(self, request, context):
        """Get fluid number
        Current fluid ID-Nr.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFluidNumber(self, request, context):
        """Set Fluid Number
        Set a number of the fluid to work with
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFluidName(self, request, context):
        """Get fluid name
        The name of the current fluid
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFluidName(self, request, context):
        """Set Fluid Name
        Set the name of the fluid to work with
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHeatCapacity(self, request, context):
        """Get heat capacity
        The heat capacity of the fluid in Joule per K
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetHeatCapacity(self, request, context):
        """Set heat capacity
        Set the heat capacity of the fluid in Joule Per Kelvin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetViscosity(self, request, context):
        """Get viscosity
        Viscosity of the fluid in cP
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetViscosity(self, request, context):
        """Set viscosity
        Set the viscosity of the fluid in cP
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FluidDefinitionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFluidSetProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFluidSetProperties,
                    request_deserializer=FluidDefinitionService__pb2.GetFluidSetProperties_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.GetFluidSetProperties_Responses.SerializeToString,
            ),
            'SetFluidsetProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFluidsetProperties,
                    request_deserializer=FluidDefinitionService__pb2.SetFluidsetProperties_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.SetFluidsetProperties_Responses.SerializeToString,
            ),
            'GetFluidNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFluidNumber,
                    request_deserializer=FluidDefinitionService__pb2.GetFluidNumber_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.GetFluidNumber_Responses.SerializeToString,
            ),
            'SetFluidNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFluidNumber,
                    request_deserializer=FluidDefinitionService__pb2.SetFluidNumber_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.SetFluidNumber_Responses.SerializeToString,
            ),
            'GetFluidName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFluidName,
                    request_deserializer=FluidDefinitionService__pb2.GetFluidName_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.GetFluidName_Responses.SerializeToString,
            ),
            'SetFluidName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFluidName,
                    request_deserializer=FluidDefinitionService__pb2.SetFluidName_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.SetFluidName_Responses.SerializeToString,
            ),
            'GetHeatCapacity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHeatCapacity,
                    request_deserializer=FluidDefinitionService__pb2.GetHeatCapacity_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.GetHeatCapacity_Responses.SerializeToString,
            ),
            'SetHeatCapacity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetHeatCapacity,
                    request_deserializer=FluidDefinitionService__pb2.SetHeatCapacity_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.SetHeatCapacity_Responses.SerializeToString,
            ),
            'GetViscosity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetViscosity,
                    request_deserializer=FluidDefinitionService__pb2.GetViscosity_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.GetViscosity_Responses.SerializeToString,
            ),
            'SetViscosity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetViscosity,
                    request_deserializer=FluidDefinitionService__pb2.SetViscosity_Parameters.FromString,
                    response_serializer=FluidDefinitionService__pb2.SetViscosity_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FluidDefinitionService(object):
    """Feature: Fluid Definition Service

    Allows full set of the fluid properties as well as the current information of the working fluid.
    By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
    02.12.2020

    """

    @staticmethod
    def GetFluidSetProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetFluidSetProperties',
            FluidDefinitionService__pb2.GetFluidSetProperties_Parameters.SerializeToString,
            FluidDefinitionService__pb2.GetFluidSetProperties_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFluidsetProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetFluidsetProperties',
            FluidDefinitionService__pb2.SetFluidsetProperties_Parameters.SerializeToString,
            FluidDefinitionService__pb2.SetFluidsetProperties_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFluidNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetFluidNumber',
            FluidDefinitionService__pb2.GetFluidNumber_Parameters.SerializeToString,
            FluidDefinitionService__pb2.GetFluidNumber_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFluidNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetFluidNumber',
            FluidDefinitionService__pb2.SetFluidNumber_Parameters.SerializeToString,
            FluidDefinitionService__pb2.SetFluidNumber_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFluidName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetFluidName',
            FluidDefinitionService__pb2.GetFluidName_Parameters.SerializeToString,
            FluidDefinitionService__pb2.GetFluidName_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFluidName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetFluidName',
            FluidDefinitionService__pb2.SetFluidName_Parameters.SerializeToString,
            FluidDefinitionService__pb2.SetFluidName_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHeatCapacity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetHeatCapacity',
            FluidDefinitionService__pb2.GetHeatCapacity_Parameters.SerializeToString,
            FluidDefinitionService__pb2.GetHeatCapacity_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetHeatCapacity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetHeatCapacity',
            FluidDefinitionService__pb2.SetHeatCapacity_Parameters.SerializeToString,
            FluidDefinitionService__pb2.SetHeatCapacity_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetViscosity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/GetViscosity',
            FluidDefinitionService__pb2.GetViscosity_Parameters.SerializeToString,
            FluidDefinitionService__pb2.GetViscosity_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetViscosity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.biovt.mw.tum.de.examples.fluiddefinitionservice.v1.FluidDefinitionService/SetViscosity',
            FluidDefinitionService__pb2.SetViscosity_Parameters.SerializeToString,
            FluidDefinitionService__pb2.SetViscosity_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
