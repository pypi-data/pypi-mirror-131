// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-03-19 14:54:01
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.biovt.mw.tum.de.examples.measurementprovider.v1;

// Feature: Measurement Provider
//   
//                   Used to acquire general status of the current flow of the flowmeter.
//           By Lukas Bromig and Jose de Jesus Pina, Institute of Biochemical Engineering, Technical University of Munich,
//   02.12.2020
//   
service MeasurementProvider {
    // GetTemperature
    //   Absolute temperature in  degree Celsius
    rpc GetTemperature(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetTemperature_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetTemperature_Responses) {}
    // Get pressure
    //   Absolute pressure in millibar
    rpc GetPressure(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetPressure_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetPressure_Responses) {}
    // Get time
    //   
    rpc GetTime(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetTime_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetTime_Responses) {}
    // Get calibrated volume
    //   Calibrated volume
    rpc GetCalibratedVolume(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetCalibratedVolume_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetCalibratedVolume_Responses) {}
    // Get sensor number
    //   Pointer to sensor number in calibration tube FPP
    rpc GetSensorNumber(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetSensorNumber_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetSensorNumber_Responses) {}
    // Get normal volume flow
    //   Volume flow referenced to normal conditions (0 Celsius degree;  1013.25HPa=1atm) in liters/min
    rpc GetNormalVolumeFlow(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetNormalVolumeFlow_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetNormalVolumeFlow_Responses) {}
    // Get volume flow
    //   Volume flow at actual conditions in liters per min
    rpc GetVolumeFlow(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetVolumeFlow_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetVolumeFlow_Responses) {}
    // Get delta pressure
    //   Relative pressure between atmosphere and sensor in millibar
    rpc GetDeltaPressure(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetDeltaPressure_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetDeltaPressure_Responses) {}
    // Get mass flow
    //   real mass flow in Kg pro min
    rpc GetMassFlow(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetMassFlow_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetMassFlow_Responses) {}
    // Get mass
    //   Net mass in g
    rpc GetMass(sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetMass_Parameters) returns (sila2.biovt.mw.tum.de.examples.measurementprovider.v1.GetMass_Responses) {}
    
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message GetTemperature_Parameters {
    
}

message GetTemperature_Responses {
    sila2.org.silastandard.Real CurrentTemperature = 1;
}

message GetPressure_Parameters {
    
}

message GetPressure_Responses {
    sila2.org.silastandard.Real CurrentPressure = 1;
}

message GetTime_Parameters {
    
}

message GetTime_Responses {
    sila2.org.silastandard.Real RealTime = 1;
}

message GetCalibratedVolume_Parameters {
    
}

message GetCalibratedVolume_Responses {
    sila2.org.silastandard.Real CurrentCalibratedVolume = 1;
}

message GetSensorNumber_Parameters {
    
}

message GetSensorNumber_Responses {
    sila2.org.silastandard.Real CurrentSensorNumber = 1;
}

message GetNormalVolumeFlow_Parameters {
    
}

message GetNormalVolumeFlow_Responses {
    sila2.org.silastandard.Real CurrentNormalVolumeFlow = 1;
}

message GetVolumeFlow_Parameters {
    
}

message GetVolumeFlow_Responses {
    sila2.org.silastandard.Real CurrentVolumeFlow = 1;
}

message GetDeltaPressure_Parameters {
    
}

message GetDeltaPressure_Responses {
    sila2.org.silastandard.Real CurrentDeltaPressure = 1;
}

message GetMassFlow_Parameters {
    
}

message GetMassFlow_Responses {
    sila2.org.silastandard.Real CurrentMassFlow = 1;
}

message GetMass_Parameters {
    
}

message GetMass_Responses {
    sila2.org.silastandard.Real CurrentMass = 1;
}


// ----------------- Metadata Definitions ------------------
