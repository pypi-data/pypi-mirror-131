# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import OffgasServicer_pb2 as OffgasServicer__pb2


class OffgasServicerStub(object):
  """Feature: Offgas Servicer

  Control a DASGIP offgas module. Enables read and write operations for various parameters.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCTRPV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetCTRPV',
        request_serializer=OffgasServicer__pb2.GetCTRPV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetCTRPV_Responses.FromString,
        )
    self.GetFPV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetFPV',
        request_serializer=OffgasServicer__pb2.GetFPV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetFPV_Responses.FromString,
        )
    self.GetOTRPV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetOTRPV',
        request_serializer=OffgasServicer__pb2.GetOTRPV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetOTRPV_Responses.FromString,
        )
    self.GetRQPV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetRQPV',
        request_serializer=OffgasServicer__pb2.GetRQPV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetRQPV_Responses.FromString,
        )
    self.GetXCO2PV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetXCO2PV',
        request_serializer=OffgasServicer__pb2.GetXCO2PV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetXCO2PV_Responses.FromString,
        )
    self.GetVCTPV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetVCTPV',
        request_serializer=OffgasServicer__pb2.GetVCTPV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetVCTPV_Responses.FromString,
        )
    self.GetVOTPV = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetVOTPV',
        request_serializer=OffgasServicer__pb2.GetVOTPV_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetVOTPV_Responses.FromString,
        )
    self.GetState = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetState',
        request_serializer=OffgasServicer__pb2.GetState_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetState_Responses.FromString,
        )
    self.GetType = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetType',
        request_serializer=OffgasServicer__pb2.GetType_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetType_Responses.FromString,
        )
    self.GetAvailable = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetAvailable',
        request_serializer=OffgasServicer__pb2.GetAvailable_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetAvailable_Responses.FromString,
        )
    self.GetName = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetName',
        request_serializer=OffgasServicer__pb2.GetName_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetName_Responses.FromString,
        )
    self.GetVersion = channel.unary_unary(
        '/sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer/GetVersion',
        request_serializer=OffgasServicer__pb2.GetVersion_Parameters.SerializeToString,
        response_deserializer=OffgasServicer__pb2.GetVersion_Responses.FromString,
        )


class OffgasServicerServicer(object):
  """Feature: Offgas Servicer

  Control a DASGIP offgas module. Enables read and write operations for various parameters.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 20.05.2019

  """

  def GetCTRPV(self, request, context):
    """Get CTR PV
    Get offgas carbondioxide transfer rate process value
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFPV(self, request, context):
    """Get F PV
    Get offgas total flow process value
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOTRPV(self, request, context):
    """Get OTR PV
    Get offgas oxygen transfer rate process value
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRQPV(self, request, context):
    """Get RQ PV
    Get offgas RQ process value
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetXCO2PV(self, request, context):
    """Get XCO2 PV
    Get offgas CO2 concentration process value
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVCTPV(self, request, context):
    """Get VCT PV
    Get offgas cumulated CO2 transfer rate
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVOTPV(self, request, context):
    """Get VOT PV
    Get offgas cumulated O2 transfer rate
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetState(self, request, context):
    """Get State
    Get controller state. Controller state (Off, On, Error).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetType(self, request, context):
    """Get Function Type
    Get function type.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAvailable(self, request, context):
    """Get Function Availability
    Get function availability.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetName(self, request, context):
    """Get Function Name
    Get function name.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVersion(self, request, context):
    """Get Function Version
    Get function model version number.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OffgasServicerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCTRPV': grpc.unary_unary_rpc_method_handler(
          servicer.GetCTRPV,
          request_deserializer=OffgasServicer__pb2.GetCTRPV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetCTRPV_Responses.SerializeToString,
      ),
      'GetFPV': grpc.unary_unary_rpc_method_handler(
          servicer.GetFPV,
          request_deserializer=OffgasServicer__pb2.GetFPV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetFPV_Responses.SerializeToString,
      ),
      'GetOTRPV': grpc.unary_unary_rpc_method_handler(
          servicer.GetOTRPV,
          request_deserializer=OffgasServicer__pb2.GetOTRPV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetOTRPV_Responses.SerializeToString,
      ),
      'GetRQPV': grpc.unary_unary_rpc_method_handler(
          servicer.GetRQPV,
          request_deserializer=OffgasServicer__pb2.GetRQPV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetRQPV_Responses.SerializeToString,
      ),
      'GetXCO2PV': grpc.unary_unary_rpc_method_handler(
          servicer.GetXCO2PV,
          request_deserializer=OffgasServicer__pb2.GetXCO2PV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetXCO2PV_Responses.SerializeToString,
      ),
      'GetVCTPV': grpc.unary_unary_rpc_method_handler(
          servicer.GetVCTPV,
          request_deserializer=OffgasServicer__pb2.GetVCTPV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetVCTPV_Responses.SerializeToString,
      ),
      'GetVOTPV': grpc.unary_unary_rpc_method_handler(
          servicer.GetVOTPV,
          request_deserializer=OffgasServicer__pb2.GetVOTPV_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetVOTPV_Responses.SerializeToString,
      ),
      'GetState': grpc.unary_unary_rpc_method_handler(
          servicer.GetState,
          request_deserializer=OffgasServicer__pb2.GetState_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetState_Responses.SerializeToString,
      ),
      'GetType': grpc.unary_unary_rpc_method_handler(
          servicer.GetType,
          request_deserializer=OffgasServicer__pb2.GetType_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetType_Responses.SerializeToString,
      ),
      'GetAvailable': grpc.unary_unary_rpc_method_handler(
          servicer.GetAvailable,
          request_deserializer=OffgasServicer__pb2.GetAvailable_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetAvailable_Responses.SerializeToString,
      ),
      'GetName': grpc.unary_unary_rpc_method_handler(
          servicer.GetName,
          request_deserializer=OffgasServicer__pb2.GetName_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetName_Responses.SerializeToString,
      ),
      'GetVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersion,
          request_deserializer=OffgasServicer__pb2.GetVersion_Parameters.FromString,
          response_serializer=OffgasServicer__pb2.GetVersion_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.org.silastandard.examples.offgasservicer.v1.OffgasServicer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
