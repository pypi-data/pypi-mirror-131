# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import SensorProvider_pb2 as SensorProvider__pb2


class SensorProviderStub(object):
  """Feature: SensorProvider

  Measurement data of the Presense Multichannel Sensor Reader (MCR) can be accessed with this feature.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 14.02.2020

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSingleO2 = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/GetSingleO2',
        request_serializer=SensorProvider__pb2.GetSingleO2_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.GetSingleO2_Responses.FromString,
        )
    self.GetSinglePH = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/GetSinglePH',
        request_serializer=SensorProvider__pb2.GetSinglePH_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.GetSinglePH_Responses.FromString,
        )
    self.GetAllO2 = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/GetAllO2',
        request_serializer=SensorProvider__pb2.GetAllO2_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.GetAllO2_Responses.FromString,
        )
    self.GetAllPH = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/GetAllPH',
        request_serializer=SensorProvider__pb2.GetAllPH_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.GetAllPH_Responses.FromString,
        )
    self.Get_TotalChannels = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/Get_TotalChannels',
        request_serializer=SensorProvider__pb2.Get_TotalChannels_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.Get_TotalChannels_Responses.FromString,
        )
    self.Get_TotalBars = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/Get_TotalBars',
        request_serializer=SensorProvider__pb2.Get_TotalBars_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.Get_TotalBars_Responses.FromString,
        )
    self.Get_BarSensors = channel.unary_unary(
        '/sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider/Get_BarSensors',
        request_serializer=SensorProvider__pb2.Get_BarSensors_Parameters.SerializeToString,
        response_deserializer=SensorProvider__pb2.Get_BarSensors_Responses.FromString,
        )


class SensorProviderServicer(object):
  """Feature: SensorProvider

  Measurement data of the Presense Multichannel Sensor Reader (MCR) can be accessed with this feature.
  By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 14.02.2020

  """

  def GetSingleO2(self, request, context):
    """Get Single O2
    Get the oxygen measurement of a specified channel.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSinglePH(self, request, context):
    """Get Single PH
    Get the PH measurement of a specified channel.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllO2(self, request, context):
    """Get All O2
    Get oxygen measurements of all connected channels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllPH(self, request, context):
    """Get All PH
    Get pH measurements of all connected channels.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_TotalChannels(self, request, context):
    """Total Channels
    Total number of channels. Default = 48.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_TotalBars(self, request, context):
    """TotalBars
    Total number of measurement bars. Default = 6.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_BarSensors(self, request, context):
    """Bar Sensors
    Number of sensors per bar. Default = 8.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SensorProviderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSingleO2': grpc.unary_unary_rpc_method_handler(
          servicer.GetSingleO2,
          request_deserializer=SensorProvider__pb2.GetSingleO2_Parameters.FromString,
          response_serializer=SensorProvider__pb2.GetSingleO2_Responses.SerializeToString,
      ),
      'GetSinglePH': grpc.unary_unary_rpc_method_handler(
          servicer.GetSinglePH,
          request_deserializer=SensorProvider__pb2.GetSinglePH_Parameters.FromString,
          response_serializer=SensorProvider__pb2.GetSinglePH_Responses.SerializeToString,
      ),
      'GetAllO2': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllO2,
          request_deserializer=SensorProvider__pb2.GetAllO2_Parameters.FromString,
          response_serializer=SensorProvider__pb2.GetAllO2_Responses.SerializeToString,
      ),
      'GetAllPH': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllPH,
          request_deserializer=SensorProvider__pb2.GetAllPH_Parameters.FromString,
          response_serializer=SensorProvider__pb2.GetAllPH_Responses.SerializeToString,
      ),
      'Get_TotalChannels': grpc.unary_unary_rpc_method_handler(
          servicer.Get_TotalChannels,
          request_deserializer=SensorProvider__pb2.Get_TotalChannels_Parameters.FromString,
          response_serializer=SensorProvider__pb2.Get_TotalChannels_Responses.SerializeToString,
      ),
      'Get_TotalBars': grpc.unary_unary_rpc_method_handler(
          servicer.Get_TotalBars,
          request_deserializer=SensorProvider__pb2.Get_TotalBars_Parameters.FromString,
          response_serializer=SensorProvider__pb2.Get_TotalBars_Responses.SerializeToString,
      ),
      'Get_BarSensors': grpc.unary_unary_rpc_method_handler(
          servicer.Get_BarSensors,
          request_deserializer=SensorProvider__pb2.Get_BarSensors_Parameters.FromString,
          response_serializer=SensorProvider__pb2.Get_BarSensors_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.biovt.mw.tum.de.examples.sensorprovider.v1.SensorProvider', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
