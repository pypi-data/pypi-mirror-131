# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import BalanceService_pb2 as BalanceService__pb2
import sila2lib.framework.SiLAFramework_pb2 as SiLAFramework__pb2


class BalanceServiceStub(object):
    """Feature: Balance Service

    This feature enables several modes of weight measuring and allows taring and zeroing of the balance.
    By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 07.04.2021

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Zero = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Zero',
                request_serializer=BalanceService__pb2.Zero_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.Zero_Responses.FromString,
                )
        self.ZeroImmediate = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/ZeroImmediate',
                request_serializer=BalanceService__pb2.ZeroImmediate_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.ZeroImmediate_Responses.FromString,
                )
        self.Tare = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Tare',
                request_serializer=BalanceService__pb2.Tare_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.Tare_Responses.FromString,
                )
        self.WeightValueOnChange = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/WeightValueOnChange',
                request_serializer=BalanceService__pb2.WeightValueOnChange_Parameters.SerializeToString,
                response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
                )
        self.WeightValueOnChange_Info = channel.unary_stream(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/WeightValueOnChange_Info',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
                )
        self.WeightValueOnChange_Result = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/WeightValueOnChange_Result',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=BalanceService__pb2.WeightValueOnChange_Responses.FromString,
                )
        self.PresetTareWeight = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/PresetTareWeight',
                request_serializer=BalanceService__pb2.PresetTareWeight_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.PresetTareWeight_Responses.FromString,
                )
        self.ClearTareValue = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/ClearTareValue',
                request_serializer=BalanceService__pb2.ClearTareValue_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.ClearTareValue_Responses.FromString,
                )
        self.TareImmediately = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/TareImmediately',
                request_serializer=BalanceService__pb2.TareImmediately_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.TareImmediately_Responses.FromString,
                )
        self.Get_StableWeightValue = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Get_StableWeightValue',
                request_serializer=BalanceService__pb2.Get_StableWeightValue_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.Get_StableWeightValue_Responses.FromString,
                )
        self.Get_ImmediateWeightValue = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Get_ImmediateWeightValue',
                request_serializer=BalanceService__pb2.Get_ImmediateWeightValue_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.Get_ImmediateWeightValue_Responses.FromString,
                )
        self.Subscribe_CurrentWeightValue = channel.unary_stream(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Subscribe_CurrentWeightValue',
                request_serializer=BalanceService__pb2.Subscribe_CurrentWeightValue_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.Subscribe_CurrentWeightValue_Responses.FromString,
                )
        self.Get_TareWeightValue = channel.unary_unary(
                '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Get_TareWeightValue',
                request_serializer=BalanceService__pb2.Get_TareWeightValue_Parameters.SerializeToString,
                response_deserializer=BalanceService__pb2.Get_TareWeightValue_Responses.FromString,
                )


class BalanceServiceServicer(object):
    """Feature: Balance Service

    This feature enables several modes of weight measuring and allows taring and zeroing of the balance.
    By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 07.04.2021

    """

    def Zero(self, request, context):
        """Zero
        Set a new zero; all weight values (including tare weight) will be measured relative to this zero. After zeroing has
        taken place, the following values applky: tare weight = 0; net weight = (=gross weight) = 0.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ZeroImmediate(self, request, context):
        """Zero Immediate
        Set a new zero immediately, regardless of balance stability. All weight values (including tare weight) will be measured
        relative to this zero. After zeroing has taken place, the following values applky: tare weight = 0; net weight = (=gross
        weight) = 0.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tare(self, request, context):
        """Tare
        Tare the balance. The next stable weight value will be saved in the tare memory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WeightValueOnChange(self, request, context):
        """Weight Value on Change
        Request the current stable weight value in display unit followed by weight values after predefined minimum weight
        changes until the command is stopped, i.e. sends the current stable weight value followed by every load change of
        predefined amount of g.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WeightValueOnChange_Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WeightValueOnChange_Result(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PresetTareWeight(self, request, context):
        """PresetTareWeight
        Preset a known tare weight value in g.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearTareValue(self, request, context):
        """Clear Tare Value
        Clear tare weight value from memory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TareImmediately(self, request, context):
        """Tare Immediately
        Tare the balance immediately and independently of balance stability.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_StableWeightValue(self, request, context):
        """Stable Weight Value
        Get the current stable weight value in g.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ImmediateWeightValue(self, request, context):
        """ImmediateWeightValue
        Get the immediate (potentially unstable) weight value
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_CurrentWeightValue(self, request, context):
        """Current Weight Value
        Subscribe to the current weight value
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_TareWeightValue(self, request, context):
        """Tare Weight Value
        Get the current tare weight value in g.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BalanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Zero': grpc.unary_unary_rpc_method_handler(
                    servicer.Zero,
                    request_deserializer=BalanceService__pb2.Zero_Parameters.FromString,
                    response_serializer=BalanceService__pb2.Zero_Responses.SerializeToString,
            ),
            'ZeroImmediate': grpc.unary_unary_rpc_method_handler(
                    servicer.ZeroImmediate,
                    request_deserializer=BalanceService__pb2.ZeroImmediate_Parameters.FromString,
                    response_serializer=BalanceService__pb2.ZeroImmediate_Responses.SerializeToString,
            ),
            'Tare': grpc.unary_unary_rpc_method_handler(
                    servicer.Tare,
                    request_deserializer=BalanceService__pb2.Tare_Parameters.FromString,
                    response_serializer=BalanceService__pb2.Tare_Responses.SerializeToString,
            ),
            'WeightValueOnChange': grpc.unary_unary_rpc_method_handler(
                    servicer.WeightValueOnChange,
                    request_deserializer=BalanceService__pb2.WeightValueOnChange_Parameters.FromString,
                    response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
            ),
            'WeightValueOnChange_Info': grpc.unary_stream_rpc_method_handler(
                    servicer.WeightValueOnChange_Info,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
            ),
            'WeightValueOnChange_Result': grpc.unary_unary_rpc_method_handler(
                    servicer.WeightValueOnChange_Result,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=BalanceService__pb2.WeightValueOnChange_Responses.SerializeToString,
            ),
            'PresetTareWeight': grpc.unary_unary_rpc_method_handler(
                    servicer.PresetTareWeight,
                    request_deserializer=BalanceService__pb2.PresetTareWeight_Parameters.FromString,
                    response_serializer=BalanceService__pb2.PresetTareWeight_Responses.SerializeToString,
            ),
            'ClearTareValue': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearTareValue,
                    request_deserializer=BalanceService__pb2.ClearTareValue_Parameters.FromString,
                    response_serializer=BalanceService__pb2.ClearTareValue_Responses.SerializeToString,
            ),
            'TareImmediately': grpc.unary_unary_rpc_method_handler(
                    servicer.TareImmediately,
                    request_deserializer=BalanceService__pb2.TareImmediately_Parameters.FromString,
                    response_serializer=BalanceService__pb2.TareImmediately_Responses.SerializeToString,
            ),
            'Get_StableWeightValue': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_StableWeightValue,
                    request_deserializer=BalanceService__pb2.Get_StableWeightValue_Parameters.FromString,
                    response_serializer=BalanceService__pb2.Get_StableWeightValue_Responses.SerializeToString,
            ),
            'Get_ImmediateWeightValue': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ImmediateWeightValue,
                    request_deserializer=BalanceService__pb2.Get_ImmediateWeightValue_Parameters.FromString,
                    response_serializer=BalanceService__pb2.Get_ImmediateWeightValue_Responses.SerializeToString,
            ),
            'Subscribe_CurrentWeightValue': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_CurrentWeightValue,
                    request_deserializer=BalanceService__pb2.Subscribe_CurrentWeightValue_Parameters.FromString,
                    response_serializer=BalanceService__pb2.Subscribe_CurrentWeightValue_Responses.SerializeToString,
            ),
            'Get_TareWeightValue': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_TareWeightValue,
                    request_deserializer=BalanceService__pb2.Get_TareWeightValue_Parameters.FromString,
                    response_serializer=BalanceService__pb2.Get_TareWeightValue_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.org.silastandard.examples.balanceservice.v1.BalanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BalanceService(object):
    """Feature: Balance Service

    This feature enables several modes of weight measuring and allows taring and zeroing of the balance.
    By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 07.04.2021

    """

    @staticmethod
    def Zero(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Zero',
            BalanceService__pb2.Zero_Parameters.SerializeToString,
            BalanceService__pb2.Zero_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ZeroImmediate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/ZeroImmediate',
            BalanceService__pb2.ZeroImmediate_Parameters.SerializeToString,
            BalanceService__pb2.ZeroImmediate_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Tare',
            BalanceService__pb2.Tare_Parameters.SerializeToString,
            BalanceService__pb2.Tare_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WeightValueOnChange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/WeightValueOnChange',
            BalanceService__pb2.WeightValueOnChange_Parameters.SerializeToString,
            SiLAFramework__pb2.CommandConfirmation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WeightValueOnChange_Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/WeightValueOnChange_Info',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            SiLAFramework__pb2.ExecutionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WeightValueOnChange_Result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/WeightValueOnChange_Result',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            BalanceService__pb2.WeightValueOnChange_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PresetTareWeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/PresetTareWeight',
            BalanceService__pb2.PresetTareWeight_Parameters.SerializeToString,
            BalanceService__pb2.PresetTareWeight_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearTareValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/ClearTareValue',
            BalanceService__pb2.ClearTareValue_Parameters.SerializeToString,
            BalanceService__pb2.ClearTareValue_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TareImmediately(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/TareImmediately',
            BalanceService__pb2.TareImmediately_Parameters.SerializeToString,
            BalanceService__pb2.TareImmediately_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_StableWeightValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Get_StableWeightValue',
            BalanceService__pb2.Get_StableWeightValue_Parameters.SerializeToString,
            BalanceService__pb2.Get_StableWeightValue_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_ImmediateWeightValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Get_ImmediateWeightValue',
            BalanceService__pb2.Get_ImmediateWeightValue_Parameters.SerializeToString,
            BalanceService__pb2.Get_ImmediateWeightValue_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_CurrentWeightValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Subscribe_CurrentWeightValue',
            BalanceService__pb2.Subscribe_CurrentWeightValue_Parameters.SerializeToString,
            BalanceService__pb2.Subscribe_CurrentWeightValue_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_TareWeightValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.org.silastandard.examples.balanceservice.v1.BalanceService/Get_TareWeightValue',
            BalanceService__pb2.Get_TareWeightValue_Parameters.SerializeToString,
            BalanceService__pb2.Get_TareWeightValue_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
