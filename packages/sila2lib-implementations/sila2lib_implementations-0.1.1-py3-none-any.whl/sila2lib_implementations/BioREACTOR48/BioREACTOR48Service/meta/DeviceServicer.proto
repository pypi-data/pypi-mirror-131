// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2020-04-16 12:18:48
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.biovt.mw.tum.de.examples.deviceservicer.v1;

// Feature: Device Servicer
//   
//                   Used to acquire general device status and individual stirrer position status of the bioREACTOR48.
//           By Lukas Bromig, Institute of Biochemical Engineering, Technical University of Munich, 12.02.2020
//   
service DeviceServicer {
    // Get Log
    //   Get the current status of the device from the state machine of the SiLA server.
    rpc GetLog(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.GetLog_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc GetLog_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc GetLog_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.biovt.mw.tum.de.examples.deviceservicer.v1.GetLog_Responses) {}
    // Get Device Status
    //   Get the current status of the device, software version, control mode, bar number and unit address.
    rpc GetDeviceStatus(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.GetDeviceStatus_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservicer.v1.GetDeviceStatus_Responses) {}
    // Get Reactor Status
    //   Get the current status of all 48 reactors. Check if stirrer is still running. 1 = stirring, 0 = not stirring
    rpc GetReactorStatus(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.GetReactorStatus_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservicer.v1.GetReactorStatus_Responses) {}
    // Current Status
    //   Get the current status of the device from the internal state machine of the SiLA server.
    rpc Subscribe_CurrentStatus(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Subscribe_CurrentStatus_Parameters) returns (stream sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Subscribe_CurrentStatus_Responses) {}
    // Bar Number
    //   Number of stirrer bars available. Default = 6.
    rpc Get_BarNumber(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Get_BarNumber_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Get_BarNumber_Responses) {}
    // BarReactorsr
    //   Number of reactors per bar. Default = 8.
    rpc Get_BarReactors(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Get_BarReactors_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Get_BarReactors_Responses) {}
    // Total Reactors
    //   Number of total reactors. Default = 6*8 = 48.
    rpc Get_TotalReactors(sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Get_TotalReactors_Parameters) returns (sila2.biovt.mw.tum.de.examples.deviceservicer.v1.Get_TotalReactors_Responses) {}
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message GetLog_Parameters {
    
}

message GetLog_Responses {
    sila2.org.silastandard.Integer CurrentLogLevel = 1;
    sila2.org.silastandard.Timestamp CurrentLogTimestamp = 2;
    sila2.org.silastandard.String CurrentLogMessage = 3;
}

message GetDeviceStatus_Parameters {
    
}

message GetDeviceStatus_Responses {
    sila2.org.silastandard.String Status = 1;
    sila2.org.silastandard.Integer Version = 2;
    sila2.org.silastandard.String Mode = 3;
    sila2.org.silastandard.String BarConnection = 4;
    sila2.org.silastandard.Integer Address = 5;
}

message GetReactorStatus_Parameters {
    
}

message GetReactorStatus_Responses {
    repeated sila2.org.silastandard.Boolean ReactorStatus = 1;
}
message Subscribe_CurrentStatus_Parameters {
    // Empty message
}

message Subscribe_CurrentStatus_Responses {
    sila2.org.silastandard.String CurrentStatus = 1;
}

message Get_BarNumber_Parameters {
    // Empty message
}

message Get_BarNumber_Responses {
    sila2.org.silastandard.Integer BarNumber = 1;
}

message Get_BarReactors_Parameters {
    // Empty message
}

message Get_BarReactors_Responses {
    sila2.org.silastandard.Integer BarReactors = 1;
}

message Get_TotalReactors_Parameters {
    // Empty message
}

message Get_TotalReactors_Responses {
    sila2.org.silastandard.Integer TotalReactors = 1;
}

// ----------------- Metadata Definitions ------------------
