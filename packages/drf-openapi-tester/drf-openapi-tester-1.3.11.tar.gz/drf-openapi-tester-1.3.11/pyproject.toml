[tool.poetry]
name = "drf-openapi-tester"
version = "1.3.11"
description = "Test utility for validating OpenAPI response documentation"
authors = ["Sondre Lilleb√∏ Gundersen <sondrelg@live.no>", "Na'aman Hirschfeld <nhirschfeld@gmail.com>"]
maintainers = ["Na'aman Hirschfeld <nhirschfeld@gmail.com>"]
license = "BSD-4-Clause"
readme = "README.md"
homepage = "https://github.com/snok/drf-openapi-tester"
repository = "https://github.com/snok/drf-openapi-tester"
documentation = "https://github.com/snok/drf-openapi-tester"
keywords = ["openapi", "swagger", "api", "testing", "schema", "django", "drf"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Pytest",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Documentation",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Utilities",
    "Typing :: Typed",
]
include = ["CHANGELOG.md"]
packages = [
    { include = "openapi_tester" },
]

[tool.poetry.dependencies]
python = ">=3.6.1,<4.0.0"
djangorestframework = "*"
django = "^2.2 || ^3.0"
inflection = "*"
openapi-spec-validator = "*"
prance = "*"
pyYAML = "*"

[tool.poetry.dev-dependencies]
drf-spectacular = "*"
drf-yasg = "*"
Faker = "*"
pre-commit = "*"
pytest = "*"
pytest-django = "*"
pylint = "*"
coverage = { extras = ["toml"], version = "^6"}
pytest-cov = "^2"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
line_length = 120
known_third_party = ["django", "drf_spectacular", "drf_yasg", "faker", "inflection", "openapi_spec_validator", "prance", "pytest", "rest_framework", "yaml"]
known_first_party = ["openapi_tester"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint.MESSAGE_CONTROL]
disable = """
    unsubscriptable-object,
    unnecessary-pass,
    missing-function-docstring,
    import-outside-toplevel,
    fixme,
    line-too-long,
"""
enable = "useless-suppression"

[tool.pylint.DESIGN]
max-args = 6
max-returns = 21
max-branches = 20
max-locals = 20

[tool.pylint.BASIC]
good-names = "_,e,i"

[tool.coverage.run]
source = ["openapi_tester/*"]
omit = ["openapi_tester/type_declarations.py"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = ["raise NotImplementedError"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "test_project.settings"
