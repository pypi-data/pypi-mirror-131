# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['brandaniethical']

package_data = \
{'': ['*']}

install_requires = \
['bs4>=0.0.1,<0.0.2',
 'lxml>=4.7.1,<5.0.0',
 'pandas>=1.3.5,<2.0.0',
 'pytest>=6.2.5,<7.0.0',
 'requests>=2.26.0,<3.0.0']

setup_kwargs = {
    'name': 'brandaniethical',
    'version': '0.1.0',
    'description': 'A package for green consumers and investors to quickly get a view of fashion brands’ animal policy, rate, and animal material usage. and check trendy tickers esg from yahoo finance and esg api',
    'long_description': '# brandaniethical\n\nA package for green consumers and investors to quickly get a view of fashion brands’ animal policy, rate, and animal material usage. and check trendy tickers esg from yahoo finance and esg api\n\n### Function1 - brandaniethical(brandlist)\nThe function provides a quick look at brandlists animal usage information, standards, and scores.\nanimal material ethical information include usage of fur, angora, down feather, shearling, karakul, exotic animal skin and hair, wool use including ‘mulesing’, and leather. Also check whether brands use these material align with standards.\nIn vignette file, a presentation demo with class of popular fashion brand is provided by retrieving 6 popoluar footwear and apparel brands\' tickers yahoo finance.  \nSkills:\nData Acquisition:\nImport data from json.\nWeb scrape data from public websites: https://goodonyou.eco/\nWrite an API client for an API and/or functions associated with API interaction.\nHandle, parse, and transform JSON and XML.\nData Cleaning, Transformation, and Organization:\nUse data wrangling to transform data into a dataframe ready for green consumers reference and analysis.\nUse loops processes.\nUse functions and functional programming to export repetitive or difficult tasks.\nHandle and process strings and use regular expressions.\nDocumentation and Presentation:\nProvide and document useful functions as part of a Python package.\nCapture error and exceptions\nUse class\nUse Jupyter Notebook to generate a vignette on how to use your package functions.\n\n    """\n    Get fashion brands\' animal ethical usage information. provide information of whether the brand use fur, angora, down feather, shearling, karakul, exotic animal skin and hair, wool use including ‘mulesing’, and leather \n    Also check whether brands use these material align with standards.\n    \n    Parameters\n    ----------\n    brandlist : list\n      A list of brands name that consumers want to know their condition of animal usage\n    \n    Returns\n    -------\n    pandas.dataframe\n      The dataframe of brands ethical consumption of animal material which include usage of fur, angora, down feather, shearling, karakul, exotic animal skin and hair, wool use including ‘mulesing’, and leather. Also check whether brands use these material align with standards.\n      \n    Examples\n    --------\n    >>> from brandaniethical import brandaniethical \n    >>> brandaniethical.brandaniethical([\'cos\',\'theory\',\'lululemon\',\'nike\', \'skechers\'])\n\tcompany\tanimal_score\tupdate\tfur\tangora\tleather\twool\tshearling\tkarakul\tdown\tfeather\texotic animal hair\texotic animal skin\tdown_RDS\twool_mulesing\n\t0\tcos\t3/5\tJuly 2020\t0\t0\t1\t1\t0\t0\t1\t0\t1\t0\t1\t1\n\t1\ttheory\t2/5\tDecember 2019\t0\t0\t1\t1\t0\t0\t1\t0\t1\t0\t0\t0\n\t2\tlululemon\t2/5\tJuly 2020\t0\t0\t1\t1\t0\t0\t1\t0\t1\t0\t1\t0\n\t3\tnike\t2/5\tJuly 2020\t0\t0\t1\t1\t0\t0\t1\t0\t1\t0\t0\t0\n\t4\tskechers\t2/5\tAugust 2020\t0\t0\t1\t1\t0\t0\t0\t0\t0\t0\t0\t0\n    \n    """\n    \n### Function2: trendyesg(region, start=5)\nGet trendy tickers\' company information from Yahoo Finance api and return their ESG score, environment score, social score, and governance score from ESG api. Users can check trending tickets across market regions, sort by top mktprice, start from specified rank of top marketing price tickers. uplimit = 20\nregion = [\'US\', \'BR\', \'AU\', \'CA\', \'FR\', \'DE\', \'HK\', \'IN\', \'IT\', \'ES\', \'GB\', \'SG\']\nUsers can make fuzzy search of those trendy tickers by discarding dollar symbol such as usd, cad from trendy tickers search results. For example, shib-usd and shib-cad are both searched with \'shib\' keyword, and the esg api only returns the stem ticker symbol.\nAlso, due to the rate limit of esg api, I set trendy tickers search results limited in 5 tickers. but users can start at any point of trendy tickers list sorted by market prices, the default is start from the 5th higest market price trendy tickers and return 5-10 trendy tickers esg scores.\nIn vignette file, a presentation demo with US region and ranking 8th - 12th higest market price trendy tickers ESG scores are provided in a dataframe. Another demo is US region ranking 10th - 14th higest market price trendy tickers ESG scores, as it can be seen some new tickers did not report their ESG therefore the result dataframe returns NA in according columns. \nSkills:\nData Acquisition:\nImport data from json.\nUse APIs to obtain data. - esg api + yahoo finance api\nYahoo finance API: https://rapidapi.com/apidojo/api/yh-finance/\nESG API document: https://www.esgenterprise.com/esg-enterprise-data-api-services/\nWrite an API client for an API and/or functions associated with API interaction.\nHandle, parse, and transform JSON and XML.\nData Cleaning, Transformation, and Organization:\nUse data wrangling to transform data into a dataframe ready for analysis.\nUse loops processes.\nUse functions and functional programming to export repetitive or difficult tasks.\nHandle and process strings and use regular expressions.\nDocumentation and Presentation:\nProvide and document useful functions as part of a Python package.\ncapture error\nUse Jupyter Notebook to generate a vignette on how to use your package functions.\n\n    \n    """\n    Get region\'s trendy tickers\' esg score based on given region and regular rank of market price.\n\n    Parameters\n    ----------\n    region : string\n      A string that limit the region of market consumers are interested in, which include US, BR, AU, CA, FR, DE, HK, IN, IT, ES, GB, and SG.\n    start : int\n      A int that indicate the ranking .\n\n    Returns\n    -------\n    pandas.dataframe\n      The dataframe of trendy tickers\' esg, environmental, social,governance score, and its ticker based on consumers interested region and the lowest ranking consumers want to start to look at\n\n    Examples\n    --------\n    >>> from brandaniethical import trendyesg \n    >>> trendyesg(region=\'US\',start =8)\n\tcompany_name\tenv_score\tsoc_score\tgov_score\ttotal\tticker\n\t0\tMedtronic plc\t500\t304\t310\t1114\tMDT\n\t1\tPfizer Inc.\t510\t300\t305\t1115\tPFE\n\t2\tRoblox Corporation\t245\t304\t220\t769\tRBLX\n\t3\tLemonade, Inc.\t520\t303\t300\t1123\tLMND\n\t4\tNucor Corporation\t251\t326\t210\t787\tNUE\n    \n    """\n    \n\n## Installation\n\n```bash\n$ pip install brandaniethical\n```\n\n## Usage\n\n- TODO\n\n## Contributing\n\nInterested in contributing? Check out the contributing guidelines. Please note that this project is released with a Code of Conduct. By contributing to this project, you agree to abide by its terms.\n\n## License\n\n`brandaniethical` was created by Yang Hu. It is licensed under the terms of the MIT license.\n\n## Credits\n\n`brandaniethical` was created with [`cookiecutter`](https://cookiecutter.readthedocs.io/en/latest/) and the `py-pkgs-cookiecutter` [template](https://github.com/py-pkgs/py-pkgs-cookiecutter).\n',
    'author': 'Yang Hu',
    'author_email': None,
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
