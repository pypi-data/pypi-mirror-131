# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_tests/blocks/preprocessing.ipynb (unless otherwise specified).

__all__ = ['test_one_hot_encoder']

# Cell
import pytest
import pandas as pd
import os
import joblib
from IPython.display import display

from block_types.blocks.preprocessing import *

# Cell
#@pytest.fixture (name='example_people_data')
#def example_people_data_fixture():
#    return example_people_data()

# Comes from preprocessing.ipynb, cell
#@pytest.mark.reference_fails
def test_one_hot_encoder ():
    df = pd.DataFrame({'x1':['b','b','a','b','a'],
                   'x2':['e','c','d','e','f'],
                  })
    one_hot_encoder = OneHotEncoder(categories=[['a','b'],['c','d','e']])
    dfr = one_hot_encoder.transform (df)

    # show result
    print ('result:')
    display (dfr)

    # compare against pd.get_dummies, removing last column corresponding to category 'f'
    df_dummies = pd.get_dummies (df).iloc[:,:-1]
    assert (dfr==df_dummies).all().all()

    # test categories='auto'
    one_hot_encoder = OneHotEncoder(categories='auto')

    # 1.- if categories='auto', we must call fit  before calling transform:
    with pytest.raises(Exception):
        dfr = one_hot_encoder.transform (df)

    # test that 'auto' returns the same as pd.get_dummies
    dfr = one_hot_encoder.fit_transform (df)
    print ('result:'); display(dfr)
    assert (dfr==pd.get_dummies (df)).all().all()