Metadata-Version: 2.1
Name: alpyvision
Version: 0.0.92
Summary: AlPyVision is a Python wrapper to work with openCV and the Albion Online game client.
Home-page: https://github.com/MadMowgli/AlPyVision
Author: Joel LÃ¤ubin
Author-email: laeubin.j@protonmail.com
License: MIT
Keywords: albion,opencv,computer vision
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Classifier: Topic :: Scientific/Engineering :: Image Processing
Classifier: Topic :: Multimedia :: Graphics :: Capture :: Screen Capture
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: Microsoft :: Windows
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: opencv-python
Requires-Dist: numpy
Requires-Dist: pywin32

# AlPyVision
> AlPyVision (**Al**bion **Py**thon **Vision**) is a package that provides API-like functionality and acts as a
> middleman between the [Python OpenCV](https://docs.opencv.org/4.x/index.html) library and the 
> [Albion Online](https://albiononline.com/en/news) game client.

## Disclaimer
> Cheating or botting is not allowed in Albion Online. This package is for learning-purposes only, such as getting
> into the field of computer vision or artificial intelligence. Do not use this package to violate the rules.

## Props
> The ground-lying idea and much of the basic architecture is heavily inspired by the
> [OpenCV Object Detection in Games YouTube series](https://www.youtube.com/c/LearnCodeByGaming/playlists)
> made by [Learn Code By Gaming](https://learncodebygaming.com/). Ben produces tutorials of exceptionally high quality,
> covering the whole stretch from the basic 'What is a Python class?' to Canny Edge Detection with stunningly precise
> explanations. You should definitely check out his content, if you want to learn more about Object Detection and
> Python. Thank you, Ben!

